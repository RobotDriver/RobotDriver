/*
 * File: app/view/MainPanel.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Modern library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Modern. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('RobotDriver.view.MainPanel', {
    extend: 'Ext.tab.Panel',
    alias: 'widget.mainpanel',

    requires: [
        'RobotDriver.view.MainPanelViewModel',
        'Ext.tab.Panel',
        'Ext.Toolbar',
        'Ext.Button',
        'Ext.form.FieldSet',
        'Ext.form.Panel',
        'Ext.field.ComboBox',
        'Ext.field.Number',
        'Ext.field.TextArea',
        'Ext.chart.CartesianChart',
        'Ext.chart.axis.Numeric',
        'Ext.chart.series.Line',
        'Ext.field.Toggle'
    ],

    viewModel: {
        type: 'mainpanel'
    },
    activeItem: 1,
    fullscreen: true,
    defaultListenerScope: true,

    items: [
        {
            xtype: 'tabpanel',
            title: 'Config',
            items: [
                {
                    xtype: 'container',
                    title: 'Hardware',
                    padding: '0 0 0 10',
                    items: [
                        {
                            xtype: 'toolbar',
                            itemId: 'mytoolbar1',
                            docked: 'top',
                            items: [
                                {
                                    xtype: 'button',
                                    text: 'Save Changes',
                                    listeners: {
                                        tap: 'onMybutton1Tap'
                                    }
                                }
                            ]
                        },
                        {
                            xtype: 'fieldset',
                            title: 'Output 1 Drive',
                            items: [
                                {
                                    xtype: 'formpanel',
                                    itemId: 'outputDrive1Form',
                                    items: [
                                        {
                                            xtype: 'combobox',
                                            name: 'type',
                                            width: 400,
                                            margin: '10 0 0 10',
                                            label: 'Motor Driver Type',
                                            labelWidth: 120,
                                            value: 'gpio',
                                            displayField: 'display',
                                            valueField: 'value',
                                            bind: {
                                                store: '{configPwmTypeStore}'
                                            }
                                        },
                                        {
                                            xtype: 'fieldset',
                                            defaults: {
                                                defaults: {
                                                    clearable: false
                                                }
                                            },
                                            title: 'L298N Pins',
                                            items: [
                                                {
                                                    xtype: 'container',
                                                    itemId: 'motora',
                                                    layout: 'hbox',
                                                    items: [
                                                        {
                                                            xtype: 'numberfield',
                                                            name: 'aen',
                                                            width: 160,
                                                            margin: '0 0 0 10',
                                                            label: 'Left Motor - A EN',
                                                            labelWidth: 120
                                                        },
                                                        {
                                                            xtype: 'numberfield',
                                                            name: 'ain1',
                                                            width: 75,
                                                            margin: '0 0 0 10',
                                                            label: 'IN1',
                                                            labelWidth: 35
                                                        },
                                                        {
                                                            xtype: 'numberfield',
                                                            name: 'ain2',
                                                            width: 75,
                                                            margin: '0 0 0 10',
                                                            label: 'IN2',
                                                            labelWidth: 35
                                                        }
                                                    ]
                                                },
                                                {
                                                    xtype: 'container',
                                                    itemId: 'motorb',
                                                    margin: '5 0 0 0',
                                                    layout: 'hbox',
                                                    items: [
                                                        {
                                                            xtype: 'numberfield',
                                                            name: 'ben',
                                                            width: 160,
                                                            margin: '0 0 0 10',
                                                            label: 'Right Motor - B EN',
                                                            labelWidth: 120
                                                        },
                                                        {
                                                            xtype: 'numberfield',
                                                            name: 'bin3',
                                                            width: 75,
                                                            margin: '0 0 0 10',
                                                            label: 'IN3',
                                                            labelWidth: 35
                                                        },
                                                        {
                                                            xtype: 'numberfield',
                                                            name: 'bin4',
                                                            width: 75,
                                                            margin: '0 0 0 10',
                                                            label: 'IN4',
                                                            labelWidth: 35
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    xtype: 'fieldset',
                                    title: 'Motor Configs',
                                    items: [
                                        {
                                            xtype: 'formpanel',
                                            itemId: 'motorConfigs',
                                            defaults: {
                                                defaults: {
                                                    clearable: false
                                                }
                                            },
                                            items: [
                                                {
                                                    xtype: 'container',
                                                    itemId: 'left1',
                                                    layout: 'hbox',
                                                    items: [
                                                        {
                                                            xtype: 'numberfield',
                                                            name: 'leftmin',
                                                            width: 175,
                                                            margin: '0 0 0 10',
                                                            label: 'Left Motor Min %',
                                                            labelWidth: 120
                                                        },
                                                        {
                                                            xtype: 'numberfield',
                                                            name: 'leftmax',
                                                            width: 95,
                                                            margin: '0 0 0 10',
                                                            label: 'Max',
                                                            labelWidth: 40
                                                        }
                                                    ]
                                                },
                                                {
                                                    xtype: 'container',
                                                    itemId: 'left2',
                                                    margin: '10 0 0 0',
                                                    layout: 'hbox',
                                                    items: [
                                                        {
                                                            xtype: 'numberfield',
                                                            name: 'rightmin',
                                                            width: 175,
                                                            margin: '0 0 0 10',
                                                            label: 'Right Motor Min %',
                                                            labelWidth: 120
                                                        },
                                                        {
                                                            xtype: 'numberfield',
                                                            name: 'rightmax',
                                                            width: 95,
                                                            margin: '0 0 0 10',
                                                            label: 'Max',
                                                            labelWidth: 40
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'fieldset',
                            disabled: true,
                            title: 'Left Drive',
                            items: [
                                {
                                    xtype: 'container',
                                    itemId: 'left1',
                                    layout: 'hbox',
                                    items: [
                                        {
                                            xtype: 'numberfield',
                                            name: 'leftch1no',
                                            width: 150,
                                            margin: '0 0 0 10',
                                            label: 'Left 1 Chan',
                                            labelWidth: 85
                                        },
                                        {
                                            xtype: 'numberfield',
                                            name: 'leftch1min',
                                            width: 150,
                                            margin: '0 0 0 10',
                                            label: 'Min',
                                            labelWidth: 50
                                        },
                                        {
                                            xtype: 'numberfield',
                                            name: 'leftch1mid',
                                            width: 150,
                                            margin: '0 0 0 10',
                                            label: 'Mid',
                                            labelWidth: 50
                                        },
                                        {
                                            xtype: 'numberfield',
                                            name: 'leftch1max',
                                            width: 150,
                                            margin: '0 0 0 10',
                                            label: 'Max',
                                            labelWidth: 50
                                        }
                                    ]
                                },
                                {
                                    xtype: 'container',
                                    itemId: 'left2',
                                    margin: '10 0 0 0',
                                    layout: 'hbox',
                                    items: [
                                        {
                                            xtype: 'numberfield',
                                            name: 'leftch1no',
                                            width: 150,
                                            margin: '0 0 0 10',
                                            label: 'Left 2 Chan',
                                            labelWidth: 85
                                        },
                                        {
                                            xtype: 'numberfield',
                                            name: 'leftch1min',
                                            width: 150,
                                            margin: '0 0 0 10',
                                            label: 'Min',
                                            labelWidth: 50
                                        },
                                        {
                                            xtype: 'numberfield',
                                            name: 'leftch1mid',
                                            width: 150,
                                            margin: '0 0 0 10',
                                            label: 'Mid',
                                            labelWidth: 50
                                        },
                                        {
                                            xtype: 'numberfield',
                                            name: 'leftch1max',
                                            width: 150,
                                            margin: '0 0 0 10',
                                            label: 'Max',
                                            labelWidth: 50
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'fieldset',
                            disabled: true,
                            title: 'Right Drive',
                            items: [
                                {
                                    xtype: 'container',
                                    itemId: 'right1',
                                    layout: 'hbox',
                                    items: [
                                        {
                                            xtype: 'numberfield',
                                            name: 'leftch1no',
                                            width: 150,
                                            margin: '0 0 0 10',
                                            label: 'Right 1 Chan',
                                            labelWidth: 85
                                        },
                                        {
                                            xtype: 'numberfield',
                                            name: 'leftch1min',
                                            width: 150,
                                            margin: '0 0 0 10',
                                            label: 'Min',
                                            labelWidth: 50
                                        },
                                        {
                                            xtype: 'numberfield',
                                            name: 'leftch1mid',
                                            width: 150,
                                            margin: '0 0 0 10',
                                            label: 'Mid',
                                            labelWidth: 50
                                        },
                                        {
                                            xtype: 'numberfield',
                                            name: 'leftch1max',
                                            width: 150,
                                            margin: '0 0 0 10',
                                            label: 'Max',
                                            labelWidth: 50
                                        }
                                    ]
                                },
                                {
                                    xtype: 'container',
                                    itemId: 'right2',
                                    margin: '10 0 0 0',
                                    layout: 'hbox',
                                    items: [
                                        {
                                            xtype: 'numberfield',
                                            name: 'leftch1no',
                                            width: 150,
                                            margin: '0 0 0 10',
                                            label: 'Right 2 Chan',
                                            labelWidth: 85
                                        },
                                        {
                                            xtype: 'numberfield',
                                            name: 'leftch1min',
                                            width: 150,
                                            margin: '0 0 0 10',
                                            label: 'Min',
                                            labelWidth: 50
                                        },
                                        {
                                            xtype: 'numberfield',
                                            name: 'leftch1mid',
                                            width: 150,
                                            margin: '0 0 0 10',
                                            label: 'Mid',
                                            labelWidth: 50
                                        },
                                        {
                                            xtype: 'numberfield',
                                            name: 'leftch1max',
                                            width: 150,
                                            margin: '0 0 0 10',
                                            label: 'Max',
                                            labelWidth: 50
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'fieldset',
                            disabled: true,
                            title: 'Camera',
                            items: [
                                {
                                    xtype: 'container',
                                    itemId: 'pan',
                                    layout: 'hbox',
                                    items: [
                                        {
                                            xtype: 'numberfield',
                                            name: 'leftch1no',
                                            width: 150,
                                            margin: '0 0 0 10',
                                            label: 'Pan Chan',
                                            labelWidth: 85
                                        },
                                        {
                                            xtype: 'numberfield',
                                            name: 'leftch1min',
                                            width: 150,
                                            margin: '0 0 0 10',
                                            label: 'Min',
                                            labelWidth: 50
                                        },
                                        {
                                            xtype: 'numberfield',
                                            name: 'leftch1mid',
                                            width: 150,
                                            margin: '0 0 0 10',
                                            label: 'Mid',
                                            labelWidth: 50
                                        },
                                        {
                                            xtype: 'numberfield',
                                            name: 'leftch1max',
                                            width: 150,
                                            margin: '0 0 0 10',
                                            label: 'Max',
                                            labelWidth: 50
                                        }
                                    ]
                                },
                                {
                                    xtype: 'container',
                                    itemId: 'tilt',
                                    margin: '10 0 0 0',
                                    layout: 'hbox',
                                    items: [
                                        {
                                            xtype: 'numberfield',
                                            name: 'leftch1no',
                                            width: 150,
                                            margin: '0 0 0 10',
                                            label: 'Tilt Chan',
                                            labelWidth: 85
                                        },
                                        {
                                            xtype: 'numberfield',
                                            name: 'leftch1min',
                                            width: 150,
                                            margin: '0 0 0 10',
                                            label: 'Min',
                                            labelWidth: 50
                                        },
                                        {
                                            xtype: 'numberfield',
                                            name: 'leftch1mid',
                                            width: 150,
                                            margin: '0 0 0 10',
                                            label: 'Mid',
                                            labelWidth: 50
                                        },
                                        {
                                            xtype: 'numberfield',
                                            name: 'leftch1max',
                                            width: 150,
                                            margin: '0 0 0 10',
                                            label: 'Max',
                                            labelWidth: 50
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'fieldset',
                            disabled: true,
                            title: 'Aux',
                            items: [
                                {
                                    xtype: 'container',
                                    itemId: 'aux1',
                                    layout: 'hbox',
                                    items: [
                                        {
                                            xtype: 'numberfield',
                                            name: 'leftch1no',
                                            width: 150,
                                            margin: '0 0 0 10',
                                            label: 'Aux 1 Chan',
                                            labelWidth: 85
                                        },
                                        {
                                            xtype: 'numberfield',
                                            name: 'leftch1min',
                                            width: 150,
                                            margin: '0 0 0 10',
                                            label: 'Min',
                                            labelWidth: 50
                                        },
                                        {
                                            xtype: 'numberfield',
                                            name: 'leftch1mid',
                                            width: 150,
                                            margin: '0 0 0 10',
                                            label: 'Mid',
                                            labelWidth: 50
                                        },
                                        {
                                            xtype: 'numberfield',
                                            name: 'leftch1max',
                                            width: 150,
                                            margin: '0 0 0 10',
                                            label: 'Max',
                                            labelWidth: 50
                                        }
                                    ]
                                },
                                {
                                    xtype: 'container',
                                    itemId: 'aux2',
                                    margin: '10 0 0 0',
                                    layout: 'hbox',
                                    items: [
                                        {
                                            xtype: 'numberfield',
                                            name: 'leftch1no',
                                            width: 150,
                                            margin: '0 0 0 10',
                                            label: 'Aux 2 Chan',
                                            labelWidth: 85
                                        },
                                        {
                                            xtype: 'numberfield',
                                            name: 'leftch1min',
                                            width: 150,
                                            margin: '0 0 0 10',
                                            label: 'Min',
                                            labelWidth: 50
                                        },
                                        {
                                            xtype: 'numberfield',
                                            name: 'leftch1mid',
                                            width: 150,
                                            margin: '0 0 0 10',
                                            label: 'Mid',
                                            labelWidth: 50
                                        },
                                        {
                                            xtype: 'numberfield',
                                            name: 'leftch1max',
                                            width: 150,
                                            margin: '0 0 0 10',
                                            label: 'Max',
                                            labelWidth: 50
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    xtype: 'container',
                    title: 'Button Mapping',
                    padding: 10,
                    items: [
                        {
                            xtype: 'fieldset',
                            title: 'xbox controller',
                            items: [
                                {
                                    xtype: 'container',
                                    layout: 'hbox',
                                    items: [
                                        {
                                            xtype: 'combobox',
                                            width: 175,
                                            margin: '10 0 0 10',
                                            label: 'L1',
                                            labelWidth: 35
                                        },
                                        {
                                            xtype: 'combobox',
                                            width: 175,
                                            margin: '10 0 0 10',
                                            label: 'R1',
                                            labelWidth: 35
                                        }
                                    ]
                                },
                                {
                                    xtype: 'container',
                                    layout: 'hbox',
                                    items: [
                                        {
                                            xtype: 'combobox',
                                            width: 175,
                                            margin: '10 0 0 10',
                                            label: 'L2',
                                            labelWidth: 35
                                        },
                                        {
                                            xtype: 'combobox',
                                            width: 175,
                                            margin: '10 0 0 10',
                                            label: 'R2',
                                            labelWidth: 35
                                        }
                                    ]
                                },
                                {
                                    xtype: 'container',
                                    layout: 'hbox',
                                    items: [
                                        {
                                            xtype: 'combobox',
                                            width: 200,
                                            margin: '10 0 0 10',
                                            label: 'Left Stick',
                                            labelWidth: 75
                                        },
                                        {
                                            xtype: 'combobox',
                                            width: 200,
                                            margin: '10 0 0 10',
                                            label: 'Right Stick',
                                            labelWidth: 75
                                        }
                                    ]
                                },
                                {
                                    xtype: 'container',
                                    layout: 'hbox',
                                    items: [
                                        {
                                            xtype: 'combobox',
                                            width: 150,
                                            margin: '10 0 0 10',
                                            label: 'X',
                                            labelWidth: 35
                                        },
                                        {
                                            xtype: 'combobox',
                                            width: 150,
                                            margin: '10 0 0 10',
                                            label: 'Y',
                                            labelWidth: 35
                                        },
                                        {
                                            xtype: 'combobox',
                                            width: 150,
                                            margin: '10 0 0 10',
                                            label: 'A',
                                            labelWidth: 35
                                        },
                                        {
                                            xtype: 'combobox',
                                            width: 150,
                                            margin: '10 0 0 10',
                                            label: 'B',
                                            labelWidth: 35
                                        }
                                    ]
                                },
                                {
                                    xtype: 'container',
                                    layout: 'hbox',
                                    items: [
                                        {
                                            xtype: 'combobox',
                                            width: 150,
                                            margin: '10 0 0 10',
                                            label: 'Up',
                                            labelWidth: 55
                                        },
                                        {
                                            xtype: 'combobox',
                                            width: 150,
                                            margin: '10 0 0 10',
                                            label: 'Down',
                                            labelWidth: 55
                                        },
                                        {
                                            xtype: 'combobox',
                                            width: 150,
                                            margin: '10 0 0 10',
                                            label: 'Left',
                                            labelWidth: 55
                                        },
                                        {
                                            xtype: 'combobox',
                                            width: 150,
                                            margin: '10 0 0 10',
                                            label: 'Right',
                                            labelWidth: 55
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    xtype: 'container',
                    title: 'Config Import/Export',
                    layout: 'fit',
                    items: [
                        {
                            xtype: 'toolbar',
                            hidden: true,
                            docked: 'top',
                            items: [
                                {
                                    xtype: 'button',
                                    text: 'Save'
                                }
                            ]
                        },
                        {
                            xtype: 'textareafield',
                            itemId: 'fullConfig',
                            margin: 10,
                            label: 'Full Config',
                            labelAlign: 'top'
                        }
                    ]
                },
                {
                    xtype: 'container',
                    title: 'Log',
                    layout: 'fit',
                    items: [
                        {
                            xtype: 'textareafield',
                            itemId: 'logEntries',
                            margin: 10,
                            labelAlign: 'top'
                        }
                    ]
                }
            ]
        },
        {
            xtype: 'panel',
            itemId: 'tabControls',
            scrollable: true,
            title: 'Controls',
            items: [
                {
                    xtype: 'container',
                    itemId: 'steering',
                    items: [
                        {
                            xtype: 'button',
                            itemId: 'mybutton8',
                            margin: '10 0 0 10',
                            text: 'Virtual Controller',
                            listeners: {
                                tap: 'onMybutton8Tap'
                            }
                        },
                        {
                            xtype: 'container',
                            userCls: 'steering-label',
                            margin: 5,
                            layout: 'hbox',
                            items: [
                                {
                                    xtype: 'container',
                                    html: 'Left',
                                    margin: '0 0 0 60'
                                },
                                {
                                    xtype: 'container',
                                    flex: 1
                                },
                                {
                                    xtype: 'container',
                                    html: 'Right'
                                }
                            ]
                        },
                        {
                            xtype: 'sliderfield',
                            bind: '{steeringSetValue}',
                            itemId: 'steeringSetPointSlider',
                            name: 'steeringSlider',
                            margin: '0 10 5 10',
                            label: 'Steer',
                            labelWidth: 65,
                            value: 500,
                            liveUpdate: true,
                            maxValue: 1000
                        }
                    ]
                },
                {
                    xtype: 'container',
                    itemId: 'throttle',
                    items: [
                        {
                            xtype: 'container',
                            userCls: 'steering-label',
                            margin: 5,
                            layout: 'hbox',
                            items: [
                                {
                                    xtype: 'container',
                                    html: 'Reverse',
                                    margin: '0 0 0 60'
                                },
                                {
                                    xtype: 'container',
                                    flex: 1
                                },
                                {
                                    xtype: 'container',
                                    html: 'Forward'
                                }
                            ]
                        },
                        {
                            xtype: 'sliderfield',
                            bind: '{throttleSetValue}',
                            itemId: 'throttleSlider',
                            name: 'throttleSlider',
                            margin: '0 10 5 10',
                            label: 'Throttle',
                            labelWidth: 65,
                            value: 500,
                            liveUpdate: true,
                            maxValue: 1000
                        }
                    ]
                },
                {
                    xtype: 'container',
                    itemId: 't-rex pan',
                    items: [
                        {
                            xtype: 'container',
                            userCls: 'steering-label',
                            margin: 5,
                            layout: 'hbox',
                            items: [
                                {
                                    xtype: 'container',
                                    html: 'Left',
                                    margin: '0 0 0 60'
                                },
                                {
                                    xtype: 'container',
                                    flex: 1
                                },
                                {
                                    xtype: 'container',
                                    html: 'Right'
                                }
                            ]
                        },
                        {
                            xtype: 'sliderfield',
                            bind: '{trexPanSetValue}',
                            itemId: 'trexPanSlider',
                            name: 'trexPanSlider',
                            margin: '0 10 5 10',
                            label: 'Pan',
                            labelWidth: 68,
                            value: 500,
                            liveUpdate: true,
                            maxValue: 1000,
                            listeners: {
                                change: 'onTrexPanSliderChange'
                            }
                        }
                    ]
                },
                {
                    xtype: 'container',
                    itemId: 't-rex tilt',
                    items: [
                        {
                            xtype: 'container',
                            userCls: 'steering-label',
                            margin: 5,
                            layout: 'hbox',
                            items: [
                                {
                                    xtype: 'container',
                                    html: 'Down',
                                    margin: '0 0 0 60'
                                },
                                {
                                    xtype: 'container',
                                    flex: 1
                                },
                                {
                                    xtype: 'container',
                                    html: 'Up'
                                }
                            ]
                        },
                        {
                            xtype: 'sliderfield',
                            bind: '{trexTiltSetValue}',
                            itemId: 'trexTiltSlider',
                            name: 'trexTiltSlider',
                            margin: '0 10 5 10',
                            label: 'Tilt',
                            labelWidth: 65,
                            value: 500,
                            liveUpdate: true,
                            maxValue: 1000,
                            listeners: {
                                change: 'onTrexTiltSliderChange'
                            }
                        }
                    ]
                },
                {
                    xtype: 'container',
                    itemId: 't-rex jaw',
                    items: [
                        {
                            xtype: 'container',
                            userCls: 'steering-label',
                            margin: 5,
                            layout: 'hbox',
                            items: [
                                {
                                    xtype: 'container',
                                    html: 'Close',
                                    margin: '0 0 0 60'
                                },
                                {
                                    xtype: 'container',
                                    flex: 1
                                },
                                {
                                    xtype: 'container',
                                    html: 'Open'
                                }
                            ]
                        },
                        {
                            xtype: 'sliderfield',
                            bind: '{trexJawSetValue}',
                            itemId: 'trexJawSlider',
                            name: 'trexJawSlider',
                            margin: '0 10 5 10',
                            label: 'Slider',
                            labelWidth: 65,
                            value: 0,
                            liveUpdate: true,
                            maxValue: 1000,
                            listeners: {
                                change: 'onTrexJawSliderChange'
                            }
                        }
                    ]
                },
                {
                    xtype: 'container',
                    itemId: 'hbox',
                    layout: 'hbox',
                    items: [
                        {
                            xtype: 'container',
                            itemId: 'ThrottleHbox',
                            userCls: 'variable-box',
                            layout: {
                                type: 'vbox',
                                align: 'start'
                            },
                            items: [
                                {
                                    xtype: 'numberfield',
                                    bind: '{throttleSetValue}',
                                    itemId: 'throttleText',
                                    width: 120,
                                    margin: 10,
                                    label: 'Throttle',
                                    labelWidth: 60,
                                    value: 500,
                                    clearable: false,
                                    maxValue: 1000,
                                    minValue: 0,
                                    listeners: {
                                        change: 'onThrottleTextChange'
                                    }
                                },
                                {
                                    xtype: 'numberfield',
                                    bind: '{steeringSetValue}',
                                    itemId: 'steeringSetPointText',
                                    width: 120,
                                    margin: 10,
                                    label: 'Steering',
                                    labelWidth: 60,
                                    value: 500,
                                    clearable: false,
                                    maxValue: 1000,
                                    minValue: 0,
                                    listeners: {
                                        change: 'onSteeringSetPointTextChange'
                                    }
                                },
                                {
                                    xtype: 'numberfield',
                                    itemId: 'shootText',
                                    width: 100,
                                    margin: 10,
                                    label: 'Shoot',
                                    labelWidth: 60,
                                    value: 0,
                                    clearable: false,
                                    maxValue: 1000,
                                    minValue: 0,
                                    listeners: {
                                        change: 'onShootTextChange'
                                    }
                                }
                            ]
                        },
                        {
                            xtype: 'container',
                            itemId: 'buttonsHbox',
                            userCls: 'variable-box',
                            layout: 'vbox',
                            items: [
                                {
                                    xtype: 'container',
                                    itemId: 'buttonsLabel',
                                    html: 'Control',
                                    margin: 10
                                },
                                {
                                    xtype: 'button',
                                    margin: '0 20 5 20',
                                    text: 'Stop Steering',
                                    listeners: {
                                        tap: 'onMybuttonTap'
                                    }
                                },
                                {
                                    xtype: 'button',
                                    margin: '5 20 5 20',
                                    text: 'Stop Throttle',
                                    listeners: {
                                        tap: 'onMybuttonTap2'
                                    }
                                },
                                {
                                    xtype: 'button',
                                    margin: '5 20 5 20',
                                    text: 'Stop Steer Loop',
                                    listeners: {
                                        tap: 'onMybuttonTap1'
                                    }
                                },
                                {
                                    xtype: 'button',
                                    margin: '5 20 5 20',
                                    text: 'Start Steer Loop',
                                    listeners: {
                                        tap: 'onMybuttonTap11'
                                    }
                                }
                            ]
                        },
                        {
                            xtype: 'container',
                            itemId: 'gamepadHbox',
                            userCls: 'variable-box',
                            items: [
                                {
                                    xtype: 'container',
                                    itemId: 'gamepadLabel',
                                    html: 'Gamepad',
                                    margin: 10
                                },
                                {
                                    xtype: 'container',
                                    margin: '0 0 10 0',
                                    layout: {
                                        type: 'hbox',
                                        align: 'start'
                                    },
                                    items: [
                                        {
                                            xtype: 'textfield',
                                            clearIcon: false,
                                            itemId: 'gamepadRightX',
                                            width: 95,
                                            margin: '0 0 0 2',
                                            label: 'R X',
                                            labelWidth: 32,
                                            clearable: false
                                        },
                                        {
                                            xtype: 'textfield',
                                            clearIcon: false,
                                            itemId: 'gamepadRightY',
                                            width: 85,
                                            margin: '0 2 0 2',
                                            label: 'Y',
                                            labelWidth: 24,
                                            clearable: false
                                        }
                                    ]
                                },
                                {
                                    xtype: 'container',
                                    layout: {
                                        type: 'hbox',
                                        align: 'start'
                                    },
                                    items: [
                                        {
                                            xtype: 'textfield',
                                            clearIcon: false,
                                            itemId: 'gamepadLeftX',
                                            width: 95,
                                            margin: '0 0 0 2',
                                            label: 'L X',
                                            labelWidth: 32,
                                            clearable: false
                                        },
                                        {
                                            xtype: 'textfield',
                                            clearIcon: false,
                                            itemId: 'gamepadLeftY',
                                            width: 85,
                                            margin: '0 2 0 2',
                                            label: 'Y',
                                            labelWidth: 24,
                                            clearable: false
                                        }
                                    ]
                                },
                                {
                                    xtype: 'numberfield',
                                    itemId: 'gamepadFwd',
                                    width: 120,
                                    margin: 10,
                                    label: 'Tr',
                                    labelWidth: 40,
                                    clearable: false,
                                    maxValue: 100,
                                    minValue: 0
                                },
                                {
                                    xtype: 'numberfield',
                                    itemId: 'gamepadRev',
                                    width: 120,
                                    margin: 10,
                                    label: 'Tl',
                                    labelWidth: 40,
                                    clearable: false,
                                    maxValue: 100,
                                    minValue: 0
                                }
                            ]
                        },
                        {
                            xtype: 'container',
                            itemId: 'buttonsHbox1',
                            userCls: 'variable-box',
                            layout: 'vbox',
                            items: [
                                {
                                    xtype: 'container',
                                    itemId: 'soundButtonsLabel',
                                    html: 'Sounds',
                                    margin: 10
                                },
                                {
                                    xtype: 'button',
                                    margin: '0 20 5 20',
                                    text: 'X: T Rex',
                                    listeners: {
                                        tap: 'onMybuttonTap3'
                                    }
                                },
                                {
                                    xtype: 'button',
                                    margin: '5 20 5 20',
                                    text: 'Y: Next Sound',
                                    listeners: {
                                        tap: 'onMybuttonTap21'
                                    }
                                }
                            ]
                        },
                        {
                            xtype: 'container',
                            itemId: 'serialCommandHbox',
                            userCls: 'variable-box',
                            layout: 'vbox',
                            items: [
                                {
                                    xtype: 'container',
                                    itemId: 'serialCommandsLabel',
                                    html: 'Arduino Command',
                                    margin: 10
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'arduinoCommand',
                                    width: 120,
                                    margin: 10,
                                    clearable: false
                                },
                                {
                                    xtype: 'button',
                                    margin: '0 20 5 20',
                                    text: 'Send',
                                    listeners: {
                                        tap: 'onMybuttonTap31'
                                    }
                                },
                                {
                                    xtype: 'container',
                                    html: '<u>LEDS:</u><BR>1-4 solid colors<BR>5-8 blik<BR><u>Text</u><BR>t1Hello World<BR>&nbsp;&nbsp;&nbsp;on line 1 show Hello World'
                                }
                            ]
                        }
                    ]
                },
                {
                    xtype: 'container',
                    itemId: 'debugOutputLabel',
                    html: 'Debug Output',
                    margin: 10
                },
                {
                    xtype: 'container',
                    height: 240,
                    itemId: 'debugOutputContainerOuter',
                    userCls: 'debugOutputContainer',
                    margin: 10,
                    scrollable: 'vertical',
                    layout: 'vbox',
                    items: [
                        {
                            xtype: 'container',
                            itemId: 'debugOutputContainer'
                        }
                    ]
                }
            ]
        },
        {
            xtype: 'panel',
            itemId: 'tabVideo',
            layout: 'vbox',
            title: 'Video',
            items: [
                {
                    xtype: 'container',
                    padding: 10,
                    defaults: {
                        margin: '0 0 0 10',
                        height: 50
                    },
                    layout: 'hbox',
                    items: [
                        {
                            xtype: 'container',
                            itemId: 'videoStatus',
                            width: 150,
                            html: 'Status',
                            padding: '20 0 0 0'
                        },
                        {
                            xtype: 'button',
                            itemId: 'btnView',
                            width: 120,
                            text: 'Start Video',
                            listeners: {
                                tap: 'onBtnViewTap'
                            }
                        },
                        {
                            xtype: 'button',
                            itemId: 'btnStop',
                            width: 120,
                            text: 'Stop Video',
                            listeners: {
                                tap: 'onBtnStopTap'
                            }
                        }
                    ]
                },
                {
                    xtype: 'container',
                    height: '100%',
                    userCls: 'video-parent',
                    html: '<canvas id="video-canvas" class="video"></canvas><canvas id="audio-canvas" class="audio"></canvas>'
                }
            ]
        },
        {
            xtype: 'container',
            title: 'Data',
            items: [
                {
                    xtype: 'cartesian',
                    height: 250,
                    hidden: false,
                    itemId: 'steeringChart',
                    animation: false,
                    colors: [
                        '#115fa6',
                        '#94ae0a',
                        '#a61120',
                        '#ff8809',
                        '#ffd13e',
                        '#a61187',
                        '#24ad9a',
                        '#7c7474',
                        '#a66111'
                    ],
                    bind: {
                        store: '{steeringChartStore}'
                    },
                    axes: [
                        {
                            type: 'numeric',
                            grid: {
                                odd: {
                                    fill: '#e8e8e8'
                                }
                            },
                            maximum: 1100,
                            minimum: -100,
                            position: 'left',
                            title: 'Position'
                        }
                    ],
                    series: [
                        {
                            type: 'line',
                            colors: [
                                'rgba(200,0,0,0.3)'
                            ],
                            style: {
                                stroke: 'rgb(200,0,0)',
                                step: true
                            },
                            xField: 'x',
                            yField: 'steeringCurrent'
                        },
                        {
                            type: 'line',
                            colors: [
                                'rgba(0,200,0,0.3)'
                            ],
                            style: {
                                stroke: 'rgb(0,200,0)',
                                step: true
                            },
                            xField: 'x',
                            yField: 'steeringTargetPoint'
                        }
                    ]
                }
            ]
        },
        {
            xtype: 'panel',
            bodyPadding: 20,
            title: 'Internet',
            items: [
                {
                    xtype: 'textfield',
                    itemId: 'internetServer',
                    name: 'internetServer',
                    label: 'Server',
                    labelWidth: 65,
                    value: 'vcn2.roboprojects.com:8055'
                },
                {
                    xtype: 'textfield',
                    itemId: 'internetKey',
                    name: 'internetKey',
                    label: 'Key',
                    labelWidth: 65,
                    value: 'api key goes here'
                },
                {
                    xtype: 'togglefield',
                    itemId: 'enableInternetVideo',
                    name: 'enableStreamToInternet',
                    label: 'Stream To Internet',
                    labelWidth: 140,
                    listeners: {
                        change: 'onMytogglefieldChange'
                    }
                },
                {
                    xtype: 'togglefield',
                    itemId: 'mytogglefield1',
                    label: 'Control via Internet',
                    labelWidth: 140,
                    listeners: {
                        change: 'onMytogglefield1Change'
                    }
                }
            ]
        }
    ],
    listeners: {
        activeItemchange: 'onTabpanelActiveItemChange',
        painted: 'onFormpanelPainted'
    },

    onMybutton1Tap: function(button, e, eOpts) {
        let form = this.queryById('outputDrive1Form');
        let formData = form.getValues();

        let newConfig = {
            type:formData.type
        };
        delete formData.type;
        newConfig.pins=formData;

        let motorForm = this.queryById('motorConfigs');
        let motorFormData = form.getValues();

        console.log(newConfig);

        this.websocketSend({
            action:'updateConfig',
            key:'outputs.drive',
            config:newConfig
        });
    },

    onMybutton8Tap: function(button, e, eOpts) {
        this.showVirtualController();
    },

    onTrexPanSliderChange: function(me, newValue, oldValue, eOpts) {
        if(newValue && newValue.constructor === Array){
            newValue = newValue[0];
        }
        this.websocketSend({
            action:'setPan',
            value:newValue
        });
    },

    onTrexTiltSliderChange: function(me, newValue, oldValue, eOpts) {
        if(newValue && newValue.constructor === Array){
            newValue = newValue[0];
        }
        this.websocketSend({
            action:'setTilt',
            value:newValue
        });
    },

    onTrexJawSliderChange: function(me, newValue, oldValue, eOpts) {
        if(newValue && newValue.constructor === Array){
            newValue = newValue[0];
        }

        this.websocketSend({
            action:'updateTrexJaw',
            value:newValue
        });
    },

    onThrottleTextChange: function(field, newValue, oldValue, eOpts) {
        if(newValue && newValue.constructor === Array){
            newValue = newValue[0];
        }

        this.moveX = newValue;
        this.sendMove();

        // if(!this.lastThrottleChangeDefered){
        //     this.lastThrottleChangeDefered = true;

        //     if(this.lastSent != newValue){

        //         this.moveX = newValue;
        //         this.sendMove();

        //         this.lastSent = newValue;
        //     }
        //     Ext.defer(function(){
        //         this.lastThrottleChangeDefered = false;
        //         var currentValue = field.getValue();

        //         if(this.lastSent != currentValue){
        //             this.lastSent = currentValue;

        //             this.moveX = currentValue;
        //             this.sendMove();
        //         }
        //     },2,this);
        // }else{

        //     Ext.defer(function(){
        //         this.lastThrottleChangeDefered = false;
        //         var currentValue = field.getValue();

        //         if(this.lastSent != currentValue){
        //             this.lastSent = currentValue;

        //             this.moveX = currentValue;
        //             this.sendMove();
        //         }
        //     },2,this);
        // }
    },

    onSteeringSetPointTextChange: function(field, newValue, oldValue, eOpts) {
        if(newValue && newValue.constructor === Array){
            newValue = newValue[0];
        }

        this.moveY = newValue;
        this.sendMove();

        // if(!this.lastSteeringChangeDefered){
        //     this.lastSteeringChangeDefered = true;

        //     if(this.lastSent != newValue){
        //         this.moveY = newValue;
        //         this.sendMove();
        //         this.lastSent = newValue;
        //     }
        //     Ext.defer(function(){
        //         this.lastSteeringChangeDefered = false;
        //         var currentValue = field.getValue();

        //         if(this.lastSent != currentValue){
        //             this.lastSent = currentValue;
        //             this.moveY = currentValue;
        //             this.sendMove();
        //         }
        //     },2,this);
        // }else{

        //     Ext.defer(function(){
        //         this.lastSteeringChangeDefered = false;
        //         var currentValue = field.getValue();

        //         if(this.lastSent != currentValue){
        //             this.lastSent = currentValue;
        //             this.moveY = currentValue;
        //             this.sendMove();
        //         }
        //     },2,this);
        // }
    },

    onShootTextChange: function(field, newValue, oldValue, eOpts) {
        if(newValue && newValue.constructor === Array){
            newValue = newValue[0];
        }

        this.websocketSend({
            action:'setShoot',
            value:newValue
        });
    },

    onMybuttonTap: function(button, e, eOpts) {
        this.stopSteeringMovement();
    },

    onMybuttonTap2: function(button, e, eOpts) {
        this.websocketSend({
            action:'stopThrottle'
        });
    },

    onMybuttonTap1: function(button, e, eOpts) {
        this.websocketSend({
            action:'stopSteeringControlLoop'
        });
    },

    onMybuttonTap11: function(button, e, eOpts) {
        this.websocketSend({
            action:'startSteeringControlLoop'
        });
    },

    onMybuttonTap3: function(button, e, eOpts) {
        this.trexscream();
    },

    onMybuttonTap21: function(button, e, eOpts) {
        this.playnextsound();
    },

    onMybuttonTap31: function(button, e, eOpts) {
        var arduinoCommand = this.queryById('arduinoCommand');

        var command = arduinoCommand.getValue();
        if(command == ''){
            Ext.Msg.alert(' ','Please enter an Arduino Command');
            return;
        }

        this.websocketSend({
            action:'arduinoCommand',
            command:command
        });

    },

    onBtnViewTap: function(button, e, eOpts) {
        this.startVideo();
    },

    onBtnStopTap: function(button, e, eOpts) {
        this.websocketSendAction('stopVideo');
    },

    onMytogglefieldChange: function(togglefield, newValue, oldValue, eOpts) {

        this.websocketSend({
            action:'internetVideo',
            enabled:newValue,
            server:this.queryById('internetServer').getValue(),
            key:this.queryById('internetKey').getValue()
        });
    },

    onMytogglefield1Change: function(togglefield, newValue, oldValue, eOpts) {
        this.websocketSend({
            action:'internetControl',
            enabled:newValue,
            server:this.queryById('internetServer').getValue(),
            key:this.queryById('internetKey').getValue()
        });
    },

    onTabpanelActiveItemChange: function(sender, value, oldValue, eOpts) {
        //console.log('tab change!');
        //console.log(arguments);
        //console.log(value.getItemId());

        switch(value.getItemId()){
            case 'tabVideo':
                this.startVideo();
        }
    },

    onFormpanelPainted: function(sender, element, eOpts) {
        this.websocketInit();
        this.websocketSendAction("readConfig",true);
        this.controlsInit();
    },

    trexscream: function() {
        this.websocketSendAction('trexscream');
    },

    playnextsound: function() {
        this.websocketSendAction('playnextsound');
    },

    controlsInit: function() {
        this.lastSteeringChangeDefered = false;
        this.moveX = 500;
        this.moveY = 500;

        this.repeatMoveTimer = null;

        window.addEventListener("gamepadconnected", this.gamepadConnected.bind(this));
        window.addEventListener("gamepaddisconnected", this.gamepadDisconnected.bind(this));

        this.trexPanSlider = this.queryById('trexPanSlider');
        this.trexTiltSlider = this.queryById('trexTiltSlider');

        //this.fieldGamepadLeftRight = this.queryById('gamepadRightLeft');
        //this.fieldGamepadFwd = this.queryById('gamepadFwd');
        //this.fieldGamepadRev = this.queryById('gamepadRev');

        this.fieldGamepadRightX = this.queryById('gamepadRightX');
        this.fieldGamepadRightY = this.queryById('gamepadRightY');

        this.fieldGamepadLeftX = this.queryById('gamepadLeftX');
        this.fieldGamepadLeftY = this.queryById('gamepadLeftY');

        this.fieldSteeringSetPointText = this.queryById('steeringSetPointText');
        this.fieldThrottleText = this.queryById('throttleText');

        this.fieldShootText = this.queryById('shootText');

        this.wsLeftStickX = -1;
        this.wsLeftStickY = -1;
        this.wsRightStickX = -1;
        this.wsRightStickY = -1;
        this.wsTriggerRight = -1;
    },

    websocketSend: function(message, queue) {
        var queueP = queue || false;

        if(this.webSocketCon === null || this.webSocketCon.readyState !== WebSocket.OPEN){
            console.log('Sending to WebSocket failed - not connected');
            if(queueP){
                this.messageQueue.push(message);
            }
            return false;
        }

        this.webSocketCon.send(Ext.encode(message));
    },

    websocketSendAction: function(action, queue) {
        var queueP = queue || false;

        this.websocketSend({
            action:action
        }, queueP);
    },

    websocketInit: function() {
        this.messageQueue = [];

        this.webSocketCon = null;

        this.websocketOpen();
    },

    websocketOpen: function() {
        if(this.webSocketCon !== null &&
           ( this.webSocketCon.readyState === WebSocket.CONNECTING ||
            this.webSocketCon.readyState === WebSocket.OPEN )
          ){
            //if the socket is already open, or connecting. dont open more than 1
            this.appendDebugOutput("Websocket already open or connecting");
            return;
        }

        this.appendDebugOutput("Opening Websocket");

        try{
            this.webSocketCon = new WebSocket('ws://'+window.location.host+'/wsapi');
        }catch(err){
            this.appendDebugOutput("Exception opening socket!");
            this.appendDebugOutput(err.message);
            this.webSocketCon = null;
            return false;
        }

        this.webSocketCon.onopen = function(){
            this.websocketSendAction('getStatus');
            if(this.messageQueue.length > 0){
                Ext.each(this.messageQueue, function(msg){
                    this.websocketSend(msg);
                }, this);
                this.messageQueue = [];
            }
        }.bind(this);

        this.webSocketCon.onmessage = this.websocketReceive.bind(this);

        this.webSocketCon.onerror = function(event){
            this.appendDebugOutput("error with websocket! " + event.error);
        }.bind(this);

        this.webSocketCon.onclose = function(event){
            this.appendDebugOutput("websocket closed! "+event.code+" "+event.reason);

            this.webSocketCon = null;
            this.websocketReconnect();
        }.bind(this);

    },

    websocketReconnect: function() {
        Ext.defer(function(){ this.websocketOpen(); },500,this);
    },

    websocketReceive: function(message) {
        // console.log('recieved message');
        // console.log(message.data);
        //this.appendDebugOutput('recieved message: '+message.data);


        var jsonData = JSON.parse(message.data);

        if(!jsonData.cmd){
            console.log('Missing cmd!');
            console.log(jsonData);
            return false;
        }
        switch(jsonData.cmd){
            default:
                console.log('Invalid cmd!');
                console.log(jsonData);
                break;
            case 'config':
                this.showConfig(jsonData.config);
                break;
            case 'status':
                this.msgUpdateStatus(jsonData);
                break;
            case 'pidConstants':
                this.msgUpdatePidConstants(jsonData);
                break;
            case 'videoRunning':
                this.checkVideoRunningResponse(jsonData);
                break;
        }


    },

    stopSteeringMovement: function() {
        this.websocketSendAction('stopSteeringMovement');
    },

    sendMove: function(value) {
        clearInterval(this.repeatMoveTimer);

        this.websocketSend({
            action:'move',
            y:this.moveY,
            x:this.moveX
        });

        //if we are not stopped and nothings changed repeat the control message every 400ms.
        if(this.moveY === 500 && this.moveX === 500){
            clearInterval();
        }else{
            this.repeatMoveTimer = setInterval(() => {
                this.websocketSend({
                    action:'move',
                    y:this.moveY,
                    x:this.moveX
                });
            },400);
        }
    },

    msgUpdateStatus: function(jsonData) {
        // this.recievedMessages++;
        this.chartedMessages++;


        // if(this.recievedMessages > 100){
        //     this.recievedMessages = 0;
        //     this.clearDebugOutput();
        //     //chartStore.removeAll();
        // }



        if(this.chartStore.count() > 100){
            this.chartStore.removeAt(0,1);
        }

        //this.steeringChart.suspendAnimation();
        // if(this.chartArray.length > 100){
        //     this.chartArray.shift();
        // }
        // this.chartArray.push([this.chartedMessages, jsonData.steeringCurrent, jsonData.steeringTargetPoint]);

        // this.chartStore.loadData(this.chartArray);

        this.chartStore.loadData([[this.chartedMessages, jsonData.steeringCurrent, jsonData.steeringTarget]], true);

        //this.steeringChart.resumeAnimation();

        this.queryById('steeringCurrent').setValue(jsonData.steeringCurrent);
        this.queryById('pidError').setValue(jsonData.pidError);
    },

    msgUpdatePidConstants: function(jsonData) {
        this.queryById('pidConstantP').setValue(jsonData.p);
        this.queryById('pidConstantI').setValue(jsonData.i);
        this.queryById('pidConstantD').setValue(jsonData.d);
    },

    gamepadConnected: function(e) {
        console.log("gamepad connected");
        console.log(e);

        this.appendDebugOutput("Gamepad connected at index "+e.gamepad.index+", id "+e.gamepad.id+". "+e.gamepad.buttons.length+" buttons, "+e.gamepad.axes.length+" axes");


        if(e.gamepad.id.indexOf('Xbox') !== -1){
            this.gamepadBeginLoop(e.gamepad);
        }else{
            this.appendDebugOutput("Not an xbox controller. Skipping!");
        }
    },

    gamepadDisconnected: function(e) {

            console.log("gamepad disconnected");
            console.log(e);

            this.appendDebugOutput("Gamepad disconnected at index "+e.gamepad.index+", id "+e.gamepad.id);

            clearInterval(this.gamePadLoops[e.gamepad.id]['loop']);
    },

    gamepadBeginLoop: function(gamepad) {
        if(!this.gamePadLoops){
            this.gamePadLoops = {};
        }

        if(this.gamePadLoops[gamepad.id]){
            return;
        }
        this.gamePadLoops[gamepad.id] = {
            gamepad:gamepad
        };

        this.gamePadLoops[gamepad.id]['loop'] = setInterval(this.gamepadUpdate.bind(this), 50, gamepad);

    },

    gamepadUpdate: function(gamepad) {
        //console.log('gamepadUpdate');

        var gamepadUpdate = navigator.getGamepads();

        if(gamepadUpdate[gamepad.index]){
            gamepad = gamepadUpdate[gamepad.index];
        }else{
            console.log('gamepad no longer available?');
            clearInterval(this.gamePadLoops[e.gamepad.id]['loop']);
            return;
        }
        //console.log(gamepad);

        //console.log('Fwd: '+gamepad.buttons[7].value);
        //console.log('Rev: '+gamepad.buttons[6].value);

        //console.log('Right: '+gamepad.axes[2]);

        //X button
        if(gamepad.buttons[2].value == 1 && this.button2lastValue != gamepad.buttons[2].value){
            this.trexscream();
        }
        this.button2lastValue = gamepad.buttons[2].value;

        //Y button
        if(gamepad.buttons[3].value == 1 && this.button3lastValue != gamepad.buttons[3].value){
            this.playnextsound();
        }
        this.button3lastValue = gamepad.buttons[3].value;


        var leftStickX = gamepad.axes[0] - .08;
        this.fieldGamepadLeftX.setValue(leftStickX);
        var leftStickXslider = Math.round((leftStickX * 500) + 500);
        if(leftStickXslider !== this.wsLeftStickX ){
            this.wsLeftStickX = leftStickXslider;
            this.fieldSteeringSetPointText.setValue(leftStickXslider);
        }

        var leftStickY = gamepad.axes[1];
        this.fieldGamepadLeftY.setValue(leftStickY);
        var leftStickYslider = 1000 - Math.round((leftStickY * 500) + 500);
        if(leftStickYslider !== this.wsLeftStickY ){
            this.wsLeftStickY = leftStickYslider;
            this.fieldThrottleText.setValue(leftStickYslider);
        }

        var rightStickX = gamepad.axes[2];
        this.fieldGamepadRightX.setValue(rightStickX);
        var rightStickXslider = 1000 - Math.round((rightStickX * 500) + 500);
        if(rightStickXslider !== this.wsRightStickX ){
            this.wsRightStickX = rightStickXslider;
            this.trexPanSlider.setValue(rightStickXslider);
        }


        var rightStickY = gamepad.axes[3];
        this.fieldGamepadRightY.setValue(rightStickY);
        var rightStickYslider = Math.round((rightStickY * 500) + 500);
        if(rightStickYslider !== this.wsRightStickY ){
            this.wsRightStickY = rightStickYslider;
            this.trexTiltSlider.setValue(rightStickYslider);
        }

        var triggerRight = gamepad.buttons[7].value;
        //this.fieldGamepadFwd.setValue(triggerRight);

        var triggerLeft = gamepad.buttons[6].value;
        //this.fieldGamepadRev.setValue(triggerLeft);


        if(triggerRight >= 0.8){
            triggerRight = 1;
        }else{
            triggerRight = 0;
        }
        if(triggerRight !== this.wsTriggerRight ){
            this.wsTriggerRight = triggerRight;
            this.fieldShootText.setValue(triggerRight);
        }

        if(this.virtualController){
            var vsRx = rightStickX * 50;
            var vsRy = rightStickY * 50;
            var vsLx = leftStickX * 50;
            var vsLy = leftStickY * 50;

            //console.log(vsRx, vsRy, vsLx, vsLy);
            this.virtualControllerStickRight.stick.style.transform = `translate3d(${vsRx}px, ${vsRy}px, 0px)`;
            this.virtualControllerStickLeft.stick.style.transform = `translate3d(${vsLx}px, ${vsLy}px, 0px)`;

            if(triggerRight > 0){
                this.virtualControllerbuttonFire.classList.add("pressed");
            }else{
                this.virtualControllerbuttonFire.classList.remove("pressed");
            }
        }
    },

    showVirtualController: function() {
        if(!this.virtualController){
            this.virtualController = Ext.create({
                xtype:'panel',
                title:'Virtual Controller',
                floated:true,
                userCls:'controller-window',
                width:500,
                height:300,
                x:150,
                y:100,
                closable:true,
                closeAction:'hide',
                draggable:true,
                html:'<div class="button-container"><div class="left-buttons">'+
        		'<div class="stick" id="virctrlstickLeft"></div>'+
        		'<button class="btn-fire" id="virctrlbuttonFire"></button>'+
        	'</div>'+
        	'<div class="right-buttons">'+
        		'<div class="stick" id="virctrlstickRight"></div>'+
        	'</div></div>',
                listeners:{
                    scope:this,

                    painted:function(){
                        //console.log(this);
                        if(!this.buttonsInit){
                            this.buttonsInit = true;
                            this.virtualControllerbuttonFire = document.getElementById('virctrlbuttonFire');
                            createFireButton(this.virtualControllerbuttonFire, function(state){
                                console.log('fire button!', state);
                                if(state==='down'){
                                    this.fieldShootText.setValue(1);
                                }else if(state==='up'){
                                    this.fieldShootText.setValue(0);
                                }

                            }.bind(this));
                            stickRange = 50;
                            this.virtualControllerStickRight = createStick(document.getElementById('virctrlstickRight'), stickRange, 'right', function(pos){
                                //console.log('stick move! right ', pos);
                                this.fieldGamepadRightX.setValue(pos.x);
                                this.fieldGamepadRightY.setValue(pos.y);

                                var x = 1000 - Math.round(((pos.x/50) * 500) + 500);
                                var y = Math.round(((pos.y/50) * 500) + 500);
                                this.trexPanSlider.setValue(x);
                                this.trexTiltSlider.setValue(y);
                            }.bind(this));
                            this.virtualControllerStickLeft = createStick(document.getElementById('virctrlstickLeft'), stickRange, 'left', function(pos){
                                //console.log('stick move! left ', pos);

                                this.fieldGamepadLeftX.setValue(pos.x);
                                this.fieldGamepadLeftY.setValue(pos.y);

                                var x = Math.round(((pos.x/50) * 500) + 500);
                                var y = 1000 - Math.round(((pos.y/50) * 500) + 500);
                                this.fieldSteeringSetPointText.setValue(x);
                                this.fieldThrottleText.setValue(y);
                            }.bind(this));
                        }
                    }
                }
            });

        }
        console.log(this.virtualController);
        this.virtualController.show({type:'slide', direction:'right'});
        let drag = this.virtualController.getDraggable();
        drag.on({
        //     dragstart:function(drag, event){
        //         console.log('drag start');
        //         console.log(event);
        //         if(event.eventTarget.className==="joystick"){
        //             console.log('drag start CANCEL!');
        //             //event.stopEvent();
        //             return false;
        //         }
        //     },
            beforedragstart:function(drag, event){
                if(event.eventTarget.className==="joystick"){
                    //event.stopEvent();
                    return false;
                }
            }
        });

    },

    clearDebugOutput: function() {
        // console.log(message);
        // console.log(this.queryById('debugOutputContainer'));
        var dom = this.queryById('debugOutputContainer').el.dom;
        // console.log(dom);
        dom.innerHTML = "";
    },

    appendDebugOutput: function(message) {
        console.log(message);

        // console.log(this.queryById('debugOutputContainer'));
        var dom = this.queryById('debugOutputContainer').el.dom;
        // console.log(dom);
        dom.innerHTML += message + "<BR>\r\n";
        // console.log(this.queryById('debugOutputContainerOuter'));
        containerDom = this.queryById('debugOutputContainerOuter').bodyElement.dom;
        containerDom.scrollTop = dom.clientHeight;
    },

    showConfig: function(config) {
        console.log('config from server');
        console.log(config);

        this.config = config;

        let form = this.queryById('outputDrive1Form');

        form.setValues(config.outputs.drive.pins);
        form.setValues({type:config.outputs.drive.type});

        this.queryById('fullConfig').setValue(JSON.stringify(config,null,2));
    },

    startVideo: function() {
        if(!this.YesCheckingVideoRunning){
            this.YesCheckingVideoRunning = true;
            this.checkVideoRunning();
        }

        this.websocketSend({
            action:'startVideo'
        }, true);

        if(!this.videoStreamPlayer){
            var canvas = document.getElementById('video-canvas');
            var url = 'ws://'+location.hostname+':'+location.port+'/viewVideo';
            this.videoStreamPlayer = new JSMpeg.Player(url, {canvas: canvas});
        }
        if(!this.audioStreamPlayer){
            var canvas = document.getElementById('audio-canvas');
            var url = 'ws://'+location.hostname+':'+location.port+'/viewAudio';
            this.audioStreamPlayer = new JSMpeg.Player(url, {canvas: canvas});
        }
    },

    checkVideoRunning: function() {
        this.websocketSend({
            action:'readVideoRunning'
        });

        if(this.YesCheckingVideoRunning){
            Ext.defer(function(){
                this.checkVideoRunning();
            }, 3000, this);
        }
    },

    checkVideoRunningResponse: function(response) {
        this.YesCheckingVideoRunning = response.running;
        this.queryById('videoStatus').setHtml('Status: ' + (response.running ? 'Running' : 'Stopped'));
    }

});