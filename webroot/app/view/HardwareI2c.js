/*
 * File: app/view/HardwareI2c.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Modern library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Modern. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('RobotDriver.view.HardwareI2c', {
    extend: 'Ext.form.Panel',
    alias: 'widget.hardwarei2c',

    requires: [
        'RobotDriver.view.HardwareServoViewModel2',
        'Ext.Container',
        'Ext.field.Display',
        'Ext.Spacer',
        'Ext.Button',
        'Ext.field.ComboBox',
        'Ext.field.Number'
    ],

    viewModel: {
        type: 'hardwarei2c'
    },
    border: true,
    defaultListenerScope: true,

    items: [
        {
            xtype: 'container',
            itemId: 'tbar',
            padding: 10,
            layout: 'hbox',
            items: [
                {
                    xtype: 'container',
                    itemId: 'title',
                    width: 118,
                    html: 'I2C Device #',
                    margin: '10 0 0 20'
                },
                {
                    xtype: 'textfield',
                    name: 'name',
                    label: 'Name',
                    labelWidth: 50,
                    autoComplete: false,
                    clearable: false
                },
                {
                    xtype: 'displayfield',
                    hidden: true,
                    name: 'type',
                    value: 'i2c'
                },
                {
                    xtype: 'spacer'
                },
                {
                    xtype: 'button',
                    iconCls: 'x-fa fa-trash',
                    text: 'Delete',
                    listeners: {
                        tap: 'onMybutton9Tap'
                    }
                }
            ]
        },
        {
            xtype: 'container',
            itemId: 'pan',
            margin: '0 0 20 0',
            layout: 'vbox',
            items: [
                {
                    xtype: 'combobox',
                    name: 'device',
                    width: 340,
                    margin: '10 0 0 10',
                    label: 'Device',
                    labelWidth: 80,
                    value: 'l298n',
                    displayField: 'display',
                    valueField: 'value',
                    bind: {
                        store: '{i2cdevices}'
                    }
                },
                {
                    xtype: 'numberfield',
                    name: 'leftch1no',
                    width: 150,
                    margin: '0 0 0 10',
                    label: 'Address &nbsp;&nbsp;&nbsp; 0x',
                    labelWidth: 90
                }
            ]
        }
    ],

    onMybutton9Tap: function(button, e, eOpts) {
        this.fireEvent('hardwaredelete', this);
    },

    getHardwareConfig: function() {
        let values = this.getValues();

        //values.devNum = this.hardwareConfig.devNum;
        values.hardwareId = this.hardwareConfig.hardwareId;

        return values;
    }

});