/*
 * File: app/view/ControlManagementButtons.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Modern library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Modern. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('RobotDriver.view.ControlManagementButtons', {
    extend: 'Ext.Container',
    alias: 'widget.controlmanagementbuttons',

    requires: [
        'RobotDriver.view.ControlManagementButtonsViewModel',
        'Ext.Button'
    ],

    viewModel: {
        type: 'controlmanagementbuttons'
    },
    defaultListenerScope: true,

    items: [
        {
            xtype: 'button',
            itemId: 'moveup',
            margin: '10 10 0 0',
            iconCls: 'x-fa fa-arrow-up',
            text: '',
            listeners: {
                tap: 'onMoveupTap'
            }
        },
        {
            xtype: 'button',
            itemId: 'movedown',
            margin: '10 10 0 0',
            iconCls: 'x-fa fa-arrow-down',
            text: '',
            listeners: {
                tap: 'onMovedownTap'
            }
        },
        {
            xtype: 'button',
            itemId: 'delete',
            margin: '10 10 0 0',
            iconCls: 'x-fa fa-trash',
            text: 'Delete',
            listeners: {
                tap: 'onDeleteTap'
            }
        }
    ],

    onMoveupTap: function(button, e, eOpts) {
        this.fireEvent('controlmoveup');
    },

    onMovedownTap: function(button, e, eOpts) {
        this.fireEvent('controlmovedown');
    },

    onDeleteTap: function(button, e, eOpts) {
        this.fireEvent('controldelete');
    }

});