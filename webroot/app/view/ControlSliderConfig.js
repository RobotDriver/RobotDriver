/*
 * File: app/view/ControlSliderConfig.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Modern library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Modern. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('RobotDriver.view.ControlSliderConfig', {
    extend: 'Ext.form.Panel',
    alias: 'widget.controlsliderconfig',

    requires: [
        'RobotDriver.view.HardwareServoViewModel3',
        'RobotDriver.view.ControlHardwareCombo',
        'RobotDriver.view.ControlManagementButtons',
        'Ext.field.Text',
        'Ext.Spacer',
        'Ext.Panel',
        'Ext.field.Slider'
    ],

    viewModel: {
        type: 'controlsliderconfig'
    },
    border: true,
    defaultListenerScope: true,

    items: [
        {
            xtype: 'container',
            layout: {
                type: 'hbox',
                align: 'start'
            },
            items: [
                {
                    xtype: 'controlhardwarecombo',
                    itemId: 'hardware',
                    width: 350,
                    listeners: {
                        select: 'onHardwareSelect'
                    }
                },
                {
                    xtype: 'textfield',
                    enableKeyEvents: true,
                    itemId: 'label',
                    name: 'label',
                    margin: 10,
                    label: 'Label',
                    labelWidth: 50,
                    autoComplete: false,
                    clearable: false,
                    listeners: {
                        change: 'onMytextfield3Change'
                    }
                },
                {
                    xtype: 'spacer'
                },
                {
                    xtype: 'controlmanagementbuttons',
                    bubbleEvents: [
                        'controldelete',
                        'controlmoveup',
                        'controlmovedown'
                    ]
                }
            ]
        },
        {
            xtype: 'panel',
            padding: '20 30',
            layout: 'vbox',
            title: 'Preview',
            items: [
                {
                    xtype: 'sliderfield',
                    itemId: 'sliderPreview',
                    label: 'Name',
                    readOnly: true
                }
            ]
        }
    ],

    onHardwareSelect: function(selection) {
        if(selection !== null && this.queryById('label').getValue() == null){
            this.queryById('label').setValue(selection.data.name);
        }
    },

    onMytextfield3Change: function(field, newValue, oldValue, eOpts) {
        this.queryById('sliderPreview').setLabel(newValue);
    },

    getConfigValues: function() {
        let values = this.getValues();
        values.type='slider';

        values.hardwareId = this.queryById('hardware').getHardwareId();

        return values;
    },

    setConfigValues: function(config) {
        this.setValues(config);

        this.queryById('hardware').setHardwareId(config.hardwareId);
    }

});