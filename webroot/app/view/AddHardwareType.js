/*
 * File: app/view/AddHardwareType.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Modern library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Modern. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('RobotDriver.view.AddHardwareType', {
    extend: 'Ext.form.Panel',
    alias: 'widget.addhardwaretype',

    requires: [
        'RobotDriver.view.AddHardwareTypeViewModel',
        'Ext.field.ComboBox',
        'Ext.Container',
        'Ext.Button'
    ],

    viewModel: {
        type: 'addhardwaretype'
    },
    height: 193,
    width: 417,
    centered: true,
    draggable: true,
    margin: 20,
    padding: 20,
    showAnimation: {
        type: 'fade'
    },
    closable: true,
    closeAction: 'hide',
    iconCls: 'x-fa fa-microchip',
    title: 'Add Hardware',
    defaultListenerScope: true,

    items: [
        {
            xtype: 'combobox',
            itemId: 'type',
            width: 338,
            label: 'Type',
            labelWidth: 60,
            value: 'servo',
            displayField: 'display',
            valueField: 'value',
            forceSelection: true,
            queryMode: 'local',
            typeAhead: true,
            bind: {
                store: '{hardwareTypeStore}'
            }
        },
        {
            xtype: 'container',
            margin: '20 0 0 0',
            items: [
                {
                    xtype: 'button',
                    width: 120,
                    margin: '0 0 0 60',
                    iconCls: 'x-fa fa-check',
                    text: 'OK',
                    listeners: {
                        tap: 'onMybutton10Tap'
                    }
                },
                {
                    xtype: 'button',
                    width: 120,
                    margin: '0 0 0 40',
                    iconCls: 'x-fa fa-ban',
                    text: 'Cancel',
                    listeners: {
                        tap: 'onMybutton12Tap'
                    }
                }
            ]
        }
    ],

    onMybutton10Tap: function(button, e, eOpts) {
        let typeField = this.queryById('type');
        let type=typeField.getValue();

        if(type===null || type == ''){
            Ext.Msg.alert('&nbsp;','<B>Please select a hardware type!</B>');
            typeField.markInvalid();
            return false;
        }
        this.fireEvent('typeselected',type);
        this.hide();
    },

    onMybutton12Tap: function(button, e, eOpts) {
        this.hide();
    }

});