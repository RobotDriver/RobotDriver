{
    "type": "Ext.Container",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userAlias": "livecontrols",
        "designer|userClassName": "liveControls"
    },
    "configAlternates": {
        "designer|userAlias": "string",
        "designer|userClassName": "string"
    },
    "name": "MyContainer39",
    "designerId": "5442e900-ec2c-4b8d-86d1-3121206780ab",
    "viewControllerInstanceId": "cadad79c-b8c8-4198-a6a4-7c46eeb4ea8e",
    "viewModelInstanceId": "49ef5a1e-5a1d-47c0-bfae-775b48787a14",
    "cn": [
        {
            "type": "Ext.Container",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "itemId": "buttons",
                "layout": "hbox"
            },
            "configAlternates": {
                "itemId": "string",
                "layout": "string"
            },
            "name": "MyContainer51",
            "designerId": "a52cb552-2774-4bdd-aed6-d1835aea4cea"
        },
        {
            "type": "Ext.Container",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "itemId": "controls",
                "layout": "vbox"
            },
            "configAlternates": {
                "itemId": "string",
                "layout": "string"
            },
            "name": "MyContainer41",
            "designerId": "ee95ad8f-3eeb-4c25-9c3f-8472225d6cdd"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "controlConfigs",
                    "hardware"
                ],
                "fn": "loadConfig",
                "implHandler": [
                    "console.log('loadConfig');",
                    "console.log(controlConfigs);",
                    "console.log(hardware);",
                    "",
                    "this.hardware = hardware;",
                    "",
                    "if(!this.buttonsContainer){",
                    "    this.buttonsContainer = this.queryById('buttons');",
                    "}",
                    "if(!this.controlsContainer){",
                    "    this.controlsContainer = this.queryById('controls');",
                    "}",
                    "this.buttonsContainer.removeAll(true, true);",
                    "this.controlsContainer.removeAll(true, true);",
                    "",
                    "this.liveControls = {};",
                    "this.liveControlsByHardware = {};",
                    "",
                    "Ext.each(controlConfigs, function(config){",
                    "    this.liveControlAdd(config);",
                    "},this);",
                    "",
                    "return {",
                    "    controlId: this.liveControls,",
                    "    hardwareId: this.liveControlsByHardware",
                    "};"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "loadConfig",
            "designerId": "a2dd8332-c8a9-480a-b6be-070fd124252d"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "config"
                ],
                "fn": "liveControlAdd",
                "implHandler": [
                    "config = config || false;",
                    "",
                    "if(!config || (!config.hardwareId && !config.xhardwareId && !config.yhardwareId)){",
                    "    return;",
                    "}",
                    "",
                    "var control;",
                    "let controlConfig = {};",
                    "",
                    "config.hardware = this.hardware[config.hardwareId];",
                    "",
                    "switch(config.type){",
                    "    default:",
                    "        return false;",
                    "    case 'slider':",
                    "",
                    "        Ext.apply(controlConfig,{",
                    "            xtype: 'basecontrolslider',",
                    "            margin:5,",
                    "            label: config.label || false,",
                    "            hardwareId: config.hardwareId,",
                    "            hardware: this.hardware[config.hardwareId],",
                    "            listeners:{",
                    "                scope:this,",
                    "                change:function(field, value){",
                    "                    if(value.constructor === Array){",
                    "                        value = value[0];//live update sends arrays for some reason",
                    "                    }",
                    "                    if(config.hardwareId !== null){",
                    "                        clearInterval(field.repeatMoveTimer);",
                    "                        ",
                    "                        this.fireEvent('websocketSend',{",
                    "                            action:'control',",
                    "                            hardwareId:config.hardwareId,",
                    "                            value:value",
                    "                        });",
                    "                        ",
                    "                        if(value != 0 && this.hardware[config.hardwareId].type==='motor'){",
                    "                            field.repeatMoveTimer = setInterval(() => {",
                    "                                this.fireEvent('websocketSend',{",
                    "                                    action:'control',",
                    "                                    hardwareId:config.hardwareId,",
                    "                                    value:value",
                    "                                });",
                    "                            },400);",
                    "                        }",
                    "                    }",
                    "                }",
                    "            }",
                    "        });",
                    "        break;",
                    "    case 'stick':",
                    "        Ext.apply(controlConfig,{",
                    "            xtype: 'basecontrolstick',",
                    "            label: config.label || false,",
                    "            listeners:{",
                    "                scope:this,",
                    "                change:function(x, y){",
                    "",
                    "                    clearInterval(config.repeatMoveTimerX);",
                    "                    clearInterval(config.repeatMoveTimerY);",
                    "",
                    "                    if(config.xhardwareId !== null){",
                    "                        this.fireEvent('websocketSend',{",
                    "                            action:'control',",
                    "                            hardwareId:config.xhardwareId,",
                    "                            value:x",
                    "                        });",
                    "                        if(x!=0 && this.hardware[config.xhardwareId] && this.hardware[config.xhardwareId].type==='motor'){",
                    "                            config.repeatMoveTimerX = setInterval(() => {",
                    "                                this.fireEvent('websocketSend',{",
                    "                                    action:'control',",
                    "                                    hardwareId:config.xhardwareId,",
                    "                                    value:x",
                    "                                });",
                    "                            },300);",
                    "                        }",
                    "                    }",
                    "                    ",
                    "                    if(config.yhardwareId !== null){",
                    "                        this.fireEvent('websocketSend',{",
                    "                            action:'control',",
                    "                            hardwareId:config.yhardwareId,",
                    "                            value:y",
                    "                        });",
                    "                        if(y!=0 && this.hardware[config.yhardwareId] && this.hardware[config.yhardwareId].type==='motor'){",
                    "                            config.repeatMoveTimerY = setInterval(() => {",
                    "                                this.fireEvent('websocketSend',{",
                    "                                    action:'control',",
                    "                                    hardwareId:config.yhardwareId,",
                    "                                    value:y",
                    "                                });",
                    "                            },300);",
                    "                        }",
                    "                    }",
                    "",
                    "                }",
                    "            }",
                    "        });",
                    "        break;",
                    "    case 'button':",
                    "        Ext.apply(controlConfig,{",
                    "            xtype: 'controlbutton',",
                    "            listeners:{",
                    "                scope:this,",
                    "                down:function(){",
                    "                    let msg = {",
                    "                        action:'control',",
                    "                        hardwareId:config.hardwareId",
                    "                    };",
                    "",
                    "                    if(config.actionType === 'setValue'){",
                    "                        msg.valueMs = config.value;",
                    "                        msg.value = msg.valueMs;",
                    "                    }else{",
                    "                        msg.actionType = config.actionType;",
                    "                        msg.value = config.value;",
                    "                    }",
                    "                    if(config.hardwareId !== null){",
                    "                        this.fireEvent('websocketSend',msg);",
                    "                    }",
                    "                },",
                    "                up:function(){",
                    "                    let msg = {",
                    "                        action:'control',",
                    "                        hardwareId:config.hardwareId",
                    "                    };",
                    "                    if(config.actionType === 'setValue'){",
                    "                        msg.valueMs = this.hardware[config.hardwareId].startingPosition;",
                    "                        msg.value = msg.valueMs;",
                    "                    }else{",
                    "                        msg.actionType = config.actionType;",
                    "                        msg.value = config.value;",
                    "                    }",
                    "",
                    "                    if(config.hardwareId !== null){",
                    "                        this.fireEvent('websocketSend',msg);",
                    "                    }",
                    "                }",
                    "            }",
                    "        });",
                    "",
                    "        break;",
                    "    //case 'motorslider':",
                    "    //    panelConfig.xtype = 'controlmotorslider';",
                    "    //    break;",
                    "}",
                    "",
                    "control = Ext.create(controlConfig);",
                    "",
                    "switch(config.type){",
                    "    case 'stick':",
                    "    case 'button':",
                    "        this.buttonsContainer.add(control);",
                    "        break;",
                    "    case 'motorslider':",
                    "    case 'slider':",
                    "        this.controlsContainer.add(control);",
                    "        break;",
                    "",
                    "}",
                    "",
                    "if(config && control.setConfigValues){",
                    "    control.setConfigValues(config);",
                    "}",
                    "",
                    "if(config.type === 'stick'){",
                    "    this.liveControls[config.controlId] = control;",
                    "    this.liveControlsByHardware[config.xhardwareId] = control;",
                    "    this.liveControlsByHardware[config.yhardwareId] = control;",
                    "}else{",
                    "    this.liveControls[config.controlId] = control;",
                    "    this.liveControlsByHardware[config.hardwareId] = control;",
                    "}"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "liveControlAdd",
            "designerId": "e49dd2ce-a1a1-4540-a477-2c28c7bca532"
        }
    ]
}