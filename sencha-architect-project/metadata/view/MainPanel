{
    "type": "Ext.tab.Panel",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "activeItem": 4,
        "deferredRender": false,
        "designer|initialView": true,
        "designer|userAlias": "mainpanel",
        "designer|userClassName": "MainPanel",
        "fullscreen": true,
        "padding": "4 0 0 0"
    },
    "configAlternates": {
        "designer|initialView": "boolean",
        "designer|userAlias": "string",
        "designer|userClassName": "string",
        "fullscreen": "boolean",
        "scrollable": "auto",
        "title": "string",
        "activeItem": "number",
        "padding": "auto",
        "deferredRender": "boolean"
    },
    "designerId": "b2f39c25-2aa9-445d-8149-537c726e51f5",
    "customConfigs": [
        {
            "group": "(Custom Properties)",
            "name": "deferredRender",
            "type": "string"
        }
    ],
    "viewControllerInstanceId": "c2fcd374-9b5c-4853-ba64-ff821433b1d3",
    "viewModelInstanceId": "5860a2a4-649c-4332-ad24-582babee6904",
    "cn": [
        {
            "type": "Ext.Panel",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "iconCls": "x-fa fa-gamepad",
                "itemId": "tabControls",
                "scrollable": true,
                "title": "Control"
            },
            "configAlternates": {
                "title": "string",
                "itemId": "string",
                "scrollable": "auto",
                "iconCls": "string"
            },
            "name": "MyPanel1",
            "designerId": "cd2bf71c-8fc0-4b6a-b2aa-24d003c79005",
            "cn": [
                {
                    "type": "Ext.Button",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "iconCls": "x-fa fa-gamepad",
                        "margin": "10 0 0 10",
                        "text": "Open Controller"
                    },
                    "configAlternates": {
                        "itemId": "string",
                        "margin": "auto",
                        "text": "string",
                        "iconCls": "string"
                    },
                    "name": "MyButton8",
                    "designerId": "af673440-4e6c-4c6d-bb30-0bb473e38305",
                    "cn": [
                        {
                            "type": "basiceventbinding",
                            "reference": {
                                "name": "listeners",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "fn": "onMybutton8Tap",
                                "implHandler": [
                                    "if(!this.controllerWindow){",
                                    "    this.controllerWindowControls = Ext.create({",
                                    "        xtype: 'livecontrols',",
                                    "        itemId: 'liveControls',",
                                    "        liveControlsConfig: this.liveControlsConfig,",
                                    "        listeners: {",
                                    "            scope:this,",
                                    "            websocketSend: function(msg){",
                                    "                this.websocketSend(msg);",
                                    "            }",
                                    "        }",
                                    "    });",
                                    "    this.controllerWindow = Ext.create({",
                                    "        xtype:'dialog',",
                                    "        title:'Controls',",
                                    "        //centered:true,",
                                    "        //x:100,",
                                    "        //y:100,",
                                    "        modal:false,",
                                    "        //floated:true,",
                                    "        closable:true,",
                                    "        closeAction:'hide',",
                                    "        resizable:{edges:['se','s','e']},",
                                    "        items:this.controllerWindowControls",
                                    "    });",
                                    "}",
                                    "this.controllerWindow.showAt(100,100);",
                                    "if(this.liveControlsConfig){",
                                    "    this.liveControlsWindow = this.controllerWindowControls.loadConfig(this.liveControlsConfig, this.hardware);",
                                    "}",
                                    ""
                                ],
                                "name": "tap"
                            },
                            "configAlternates": {
                                "fn": "string",
                                "implHandler": "code",
                                "name": "string"
                            },
                            "name": "onMybutton8Tap",
                            "designerId": "ea17e509-0d01-473d-8565-d886cd1c1eb2"
                        }
                    ]
                },
                {
                    "type": "linkedinstance",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "itemId": "liveController"
                    },
                    "configAlternates": {
                        "itemId": "string"
                    },
                    "name": "livecontroller",
                    "designerId": "de65778c-6da9-4fe5-9961-27b50a6f1b1b",
                    "masterInstanceId": "e580d8f3-9c79-4b02-9d80-00aaf3ba5110",
                    "cn": [
                        {
                            "type": "basiceventbinding",
                            "reference": {
                                "name": "listeners",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "designer|params": [
                                    "mapping",
                                    "value"
                                ],
                                "fn": "onContainerAction",
                                "implHandler": [
                                    "if(this.liveControls && this.liveControls.controlId && this.liveControls.controlId[mapping.controlId]){",
                                    "",
                                    "let control = this.liveControls.controlId[mapping.controlId];",
                                    "",
                                    "    switch(control.xtype){",
                                    "        case 'controlbutton':",
                                    "            control.setValue(value===true ? 'down' : 'up');",
                                    "            break;",
                                    "        case 'basecontrolslider':",
                                    "            //control.setSliderValue(value * 100);",
                                    "            control.setValue(value * 100);",
                                    "            break;",
                                    "        case 'basecontrolstick':",
                                    "            control.setValue(value[0], value[1]);",
                                    "    }",
                                    "}else{",
                                    "    console.error('Controller mapping to invalid controlId ', mapping.controlId);",
                                    "}",
                                    "",
                                    "",
                                    "if(this.liveControlsWindow && this.liveControlsWindow.controlId && this.liveControlsWindow.controlId[mapping.controlId]){",
                                    "    let controlWin = this.liveControlsWindow.controlId[mapping.controlId];",
                                    "",
                                    "    switch(controlWin.xtype){",
                                    "        case 'controlbutton':",
                                    "            controlWin.setRawValue(value===true ? 'down' : 'up');",
                                    "            break;",
                                    "        case 'basecontrolslider':",
                                    "            //control.setSliderValue(value * 100);",
                                    "            controlWin.setRawValue(value * 100);",
                                    "            break;",
                                    "        case 'basecontrolstick':",
                                    "            controlWin.setRawValue(value[0], value[1]);",
                                    "    }",
                                    "}else{",
                                    "    console.error('Controller Win mapping to invalid controlId ', mapping.controlId);",
                                    "    return;",
                                    "}"
                                ],
                                "name": "action"
                            },
                            "configAlternates": {
                                "designer|params": "typedarray",
                                "fn": "string",
                                "implHandler": "code",
                                "name": "string"
                            },
                            "name": "onContainerAction",
                            "designerId": "e75675ec-da16-49ef-8a2f-b51cbd6a8731"
                        }
                    ]
                },
                {
                    "type": "linkedinstance",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "itemId": "liveControls"
                    },
                    "configAlternates": {
                        "itemId": "string"
                    },
                    "name": "livecontrols",
                    "designerId": "70ae63ab-9466-4db1-b261-d63123405bdc",
                    "masterInstanceId": "5442e900-ec2c-4b8d-86d1-3121206780ab",
                    "cn": [
                        {
                            "type": "basiceventbinding",
                            "reference": {
                                "name": "listeners",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "designer|params": [
                                    "msg"
                                ],
                                "fn": "onContainerWebsocketSend",
                                "implHandler": [
                                    "this.websocketSend(msg);"
                                ],
                                "name": "websocketSend"
                            },
                            "configAlternates": {
                                "designer|params": "typedarray",
                                "fn": "string",
                                "implHandler": "code",
                                "name": "string"
                            },
                            "name": "onContainerWebsocketSend",
                            "designerId": "d1fb6249-c3df-4963-863a-ae7daad1b5fd"
                        }
                    ]
                },
                {
                    "type": "Ext.Container",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "html": "Debug Output",
                        "itemId": "debugOutputLabel",
                        "margin": 10
                    },
                    "configAlternates": {
                        "html": "string",
                        "margin": "auto",
                        "itemId": "string"
                    },
                    "name": "MyContainer3",
                    "designerId": "c25f6047-5ddc-49c7-9185-6f2047bd9a08"
                },
                {
                    "type": "Ext.Container",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "height": 240,
                        "itemId": "debugOutputContainerOuter",
                        "layout": "vbox",
                        "margin": 10,
                        "scrollable": "vertical",
                        "userCls": [
                            "debugOutputContainer"
                        ]
                    },
                    "configAlternates": {
                        "height": "auto",
                        "itemId": "string",
                        "margin": "auto",
                        "scrollable": "auto",
                        "userCls": "typedarray",
                        "layout": "string"
                    },
                    "name": "MyContainer4",
                    "designerId": "46c30fa6-59a2-44be-a1e1-c022dc28bb32",
                    "cn": [
                        {
                            "type": "Ext.Container",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "itemId": "debugOutputContainer"
                            },
                            "configAlternates": {
                                "itemId": "string"
                            },
                            "name": "MyContainer2",
                            "designerId": "cf060d03-408a-44bd-811b-978fce3a5cb9"
                        }
                    ]
                }
            ]
        },
        {
            "type": "Ext.Panel",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "iconCls": "x-fa fa-camera",
                "itemId": "tabVideo",
                "layout": "vbox",
                "title": "Video"
            },
            "configAlternates": {
                "collapsed": "boolean",
                "collapsible": "string",
                "height": "auto",
                "layout": "string",
                "title": "string",
                "itemId": "string",
                "iconCls": "string"
            },
            "name": "MyPanel",
            "designerId": "aaa3d8c5-4a21-493c-a14e-b2f197292c44",
            "cn": [
                {
                    "type": "Ext.Container",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "defaults": [
                            "{",
                            "margin:'0 0 0 10',",
                            "height:50",
                            "}"
                        ],
                        "layout": "hbox",
                        "padding": 10
                    },
                    "configAlternates": {
                        "defaults": "object",
                        "layout": "string",
                        "padding": "auto"
                    },
                    "name": "MyContainer27",
                    "designerId": "fd001239-689e-4915-ac5c-f4588bf35c22",
                    "cn": [
                        {
                            "type": "Ext.Container",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "html": "Status",
                                "itemId": "videoStatus",
                                "padding": "20 0 0 0",
                                "width": 150
                            },
                            "configAlternates": {
                                "html": "string",
                                "itemId": "string",
                                "padding": "auto",
                                "width": "auto"
                            },
                            "name": "MyContainer28",
                            "designerId": "ec1fe8e1-795a-4570-b26e-f16e9c3488bb"
                        },
                        {
                            "type": "Ext.Button",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "iconCls": "x-fa fa-play",
                                "itemId": "btnView",
                                "text": "Start Video",
                                "width": 120
                            },
                            "configAlternates": {
                                "height": "auto",
                                "itemId": "string",
                                "text": "string",
                                "width": "auto",
                                "iconCls": "string"
                            },
                            "name": "MyButton6",
                            "designerId": "086e427c-e5eb-47cc-835a-055ca3a74e65",
                            "cn": [
                                {
                                    "type": "basiceventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "fn": "onBtnViewTap",
                                        "implHandler": [
                                            "this.startVideo();"
                                        ],
                                        "name": "tap"
                                    },
                                    "configAlternates": {
                                        "designer|params": "typedarray",
                                        "fn": "string",
                                        "implHandler": "code",
                                        "name": "string"
                                    },
                                    "name": "onBtnViewTap",
                                    "designerId": "37949e6d-bfdd-4e92-9364-473304f915f9"
                                }
                            ]
                        },
                        {
                            "type": "Ext.Button",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "iconCls": "x-fa fa-stop",
                                "itemId": "btnStop",
                                "text": "Stop Video",
                                "width": 120
                            },
                            "configAlternates": {
                                "height": "auto",
                                "itemId": "string",
                                "text": "string",
                                "width": "auto",
                                "iconCls": "string"
                            },
                            "name": "MyButton7",
                            "designerId": "1b245db8-dee3-434f-940c-0c444dea1da6",
                            "cn": [
                                {
                                    "type": "basiceventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "fn": "onBtnStopTap",
                                        "implHandler": [
                                            "this.websocketSendAction('stopVideo');"
                                        ],
                                        "name": "tap"
                                    },
                                    "configAlternates": {
                                        "designer|params": "typedarray",
                                        "fn": "string",
                                        "implHandler": "code",
                                        "name": "string"
                                    },
                                    "name": "onBtnStopTap",
                                    "designerId": "ed95a3a4-70e3-41f8-ab2a-c25f6f779260"
                                }
                            ]
                        },
                        {
                            "type": "Ext.Container",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "defaults": [
                                    "{",
                                    "margin:'0 0 0 10',",
                                    "height:50",
                                    "}"
                                ],
                                "layout": "hbox",
                                "margin": "0 0 0 20"
                            },
                            "configAlternates": {
                                "defaults": "object",
                                "layout": "string",
                                "padding": "auto",
                                "margin": "auto"
                            },
                            "name": "MyContainer1",
                            "designerId": "68aa4832-4f12-44cf-a023-20b9acf6bec3",
                            "cn": [
                                {
                                    "type": "Ext.Button",
                                    "reference": {
                                        "name": "items",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "height": 30,
                                        "text": "Stop Audio",
                                        "width": 100
                                    },
                                    "configAlternates": {
                                        "height": "auto",
                                        "itemId": "string",
                                        "text": "string",
                                        "width": "auto",
                                        "iconCls": "string"
                                    },
                                    "name": "MyButton6",
                                    "designerId": "6e6fc204-965e-4f10-add9-6705bb9bf064",
                                    "cn": [
                                        {
                                            "type": "basiceventbinding",
                                            "reference": {
                                                "name": "listeners",
                                                "type": "array"
                                            },
                                            "codeClass": null,
                                            "userConfig": {
                                                "fn": "onBtnViewTap1",
                                                "implHandler": [
                                                    "this.websocketSendAction('stopAudio');"
                                                ],
                                                "name": "tap"
                                            },
                                            "configAlternates": {
                                                "designer|params": "typedarray",
                                                "fn": "string",
                                                "implHandler": "code",
                                                "name": "string"
                                            },
                                            "name": "onBtnViewTap1",
                                            "designerId": "5957ef6c-e109-4103-860d-0bf958e43dc0"
                                        }
                                    ]
                                },
                                {
                                    "type": "Ext.Button",
                                    "reference": {
                                        "name": "items",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "height": 30,
                                        "text": "Start Audio",
                                        "width": 100
                                    },
                                    "configAlternates": {
                                        "height": "auto",
                                        "itemId": "string",
                                        "text": "string",
                                        "width": "auto",
                                        "iconCls": "string"
                                    },
                                    "name": "MyButton7",
                                    "designerId": "cdf7f394-ddab-4aeb-ae61-bd36bb6faed1",
                                    "cn": [
                                        {
                                            "type": "basiceventbinding",
                                            "reference": {
                                                "name": "listeners",
                                                "type": "array"
                                            },
                                            "codeClass": null,
                                            "userConfig": {
                                                "fn": "onBtnStopTap1",
                                                "implHandler": [
                                                    "this.websocketSendAction('startAudio');"
                                                ],
                                                "name": "tap"
                                            },
                                            "configAlternates": {
                                                "designer|params": "typedarray",
                                                "fn": "string",
                                                "implHandler": "code",
                                                "name": "string"
                                            },
                                            "name": "onBtnStopTap1",
                                            "designerId": "3abd0098-c769-4c2f-b21f-145f0402f2f4"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "Ext.Container",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "height": "100%",
                        "html": "<canvas id=\"video-canvas\" class=\"video\"></canvas><canvas id=\"audio-canvas\" class=\"audio\"></canvas>",
                        "itemId": "mycontainer26",
                        "userCls": [
                            "video-parent"
                        ]
                    },
                    "configAlternates": {
                        "html": "string",
                        "layout|flex": "number",
                        "height": "auto",
                        "userCls": "typedarray",
                        "itemId": "string"
                    },
                    "name": "MyContainer26",
                    "designerId": "b209090d-554a-430c-9518-64bfd4f0fc7e"
                }
            ]
        },
        {
            "type": "Ext.Container",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "iconCls": "x-fa fa-signal",
                "title": "Data"
            },
            "configAlternates": {
                "title": "string",
                "iconCls": "string"
            },
            "name": "MyContainer44",
            "designerId": "7d86ff31-906d-4367-bacf-18b1fe98da44",
            "cn": [
                {
                    "type": "Ext.chart.CartesianChart",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "animation": false,
                        "colors": [
                            "[\"#115fa6\", \"#94ae0a\", \"#a61120\", \"#ff8809\", \"#ffd13e\", \"#a61187\", \"#24ad9a\", \"#7c7474\", \"#a66111\"]"
                        ],
                        "height": 250,
                        "hidden": false,
                        "itemId": "steeringChart",
                        "store": [
                            "{steeringChartStore}"
                        ]
                    },
                    "configAlternates": {
                        "store": "binding",
                        "smooth": "boolean",
                        "animation": "boolean",
                        "colors": "array",
                        "height": "auto",
                        "itemId": "string",
                        "hidden": "boolean"
                    },
                    "name": "MyLineChart",
                    "designerId": "9117387a-1082-48a2-8344-9ebc6e634ee4",
                    "isBuiltIn": true,
                    "iconCls": "icon-line-chart",
                    "autoName": "MyLineChart",
                    "customConfigs": [
                        {
                            "group": "(Custom Properties)",
                            "name": "smooth",
                            "type": "string"
                        }
                    ],
                    "cn": [
                        {
                            "type": "Ext.chart.axis.Numeric",
                            "reference": {
                                "name": "axes",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "grid": [
                                    "{",
                                    "    odd: {",
                                    "        fill: '#e8e8e8'",
                                    "    }",
                                    "}"
                                ],
                                "maximum": 1100,
                                "minimum": -100,
                                "position": "left",
                                "title": "Position"
                            },
                            "configAlternates": {
                                "grid": "object",
                                "maximum": "number",
                                "minimum": "number",
                                "position": "string",
                                "title": "string"
                            },
                            "name": "MyNumericAxis",
                            "designerId": "d13bcb1d-4c9f-42f1-93ec-6876744d7e90"
                        },
                        {
                            "type": "Ext.chart.series.Line",
                            "reference": {
                                "name": "series",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "colors": [
                                    "[\"rgba(200,0,0,0.3)\"]"
                                ],
                                "style": [
                                    "{",
                                    "    stroke: 'rgb(200,0,0)',",
                                    "    step:true",
                                    "}"
                                ],
                                "xField": "x",
                                "yField": "steeringCurrent"
                            },
                            "configAlternates": {
                                "smooth": "boolean",
                                "defaultSmoothness": "number",
                                "colors": "array",
                                "style": "object",
                                "xField": "datafield",
                                "yField": "datafield"
                            },
                            "name": "MyLineSeries",
                            "designerId": "22858622-1c46-458e-817b-96b9ab5bc1c5",
                            "customConfigs": [
                                {
                                    "group": "(Custom Properties)",
                                    "name": "smooth",
                                    "type": "string"
                                },
                                {
                                    "group": "(Custom Properties)",
                                    "name": "defaultSmoothness",
                                    "type": "string"
                                }
                            ]
                        },
                        {
                            "type": "Ext.chart.series.Line",
                            "reference": {
                                "name": "series",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "colors": [
                                    "[\"rgba(0,200,0,0.3)\"]"
                                ],
                                "style": [
                                    "{",
                                    "    stroke: 'rgb(0,200,0)',",
                                    "    step:true",
                                    "}"
                                ],
                                "xField": "x",
                                "yField": "steeringTargetPoint"
                            },
                            "configAlternates": {
                                "colors": "array",
                                "style": "object",
                                "xField": "datafield",
                                "yField": "datafield",
                                "smooth": "boolean",
                                "defaultSmoothness": "number"
                            },
                            "name": "MyLineSeries2",
                            "designerId": "053db578-7751-48b7-a4f1-e06d584f269e",
                            "customConfigs": [
                                {
                                    "group": "(Custom Properties)",
                                    "name": "smooth",
                                    "type": "string"
                                },
                                {
                                    "group": "(Custom Properties)",
                                    "name": "defaultSmoothness",
                                    "type": "string"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "Ext.Panel",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "bodyPadding": 20,
                "iconCls": "x-fa fa-globe",
                "itemId": "tabInternet",
                "title": "Internet"
            },
            "configAlternates": {
                "bodyPadding": "auto",
                "title": "string",
                "iconCls": "string",
                "itemId": "string"
            },
            "name": "MyPanel2",
            "designerId": "11c244e4-f355-4daf-8175-5db4d08dc061",
            "cn": [
                {
                    "type": "Ext.field.Text",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "itemId": "internetServer",
                        "label": "Server",
                        "labelWidth": 65,
                        "name": "internetServer",
                        "value": [
                            "'vcn2.roboprojects.com:8055'"
                        ]
                    },
                    "configAlternates": {
                        "itemId": "string",
                        "label": "string",
                        "labelWidth": "auto",
                        "name": "string",
                        "value": "object"
                    },
                    "name": "MyTextField6",
                    "designerId": "01d1c118-3ca7-44a8-b138-5be93efe2703"
                },
                {
                    "type": "Ext.field.Text",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "itemId": "internetKey",
                        "label": "Key",
                        "labelWidth": 65,
                        "name": "internetKey",
                        "value": [
                            "'API key goes here'"
                        ]
                    },
                    "configAlternates": {
                        "itemId": "string",
                        "label": "string",
                        "labelWidth": "auto",
                        "name": "string",
                        "value": "object"
                    },
                    "name": "MyTextField8",
                    "designerId": "b3bfecc9-5d6e-4457-86e9-a6e4946e6a41"
                },
                {
                    "type": "Ext.field.Toggle",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "itemId": "enableInternetVideo",
                        "label": "Stream To Internet",
                        "labelWidth": 140,
                        "name": "enableStreamToInternet"
                    },
                    "configAlternates": {
                        "itemId": "string",
                        "label": "string",
                        "labelWidth": "auto",
                        "name": "string"
                    },
                    "name": "MyToggleField",
                    "designerId": "a0b1885d-e60e-4980-a85d-17537c7facfa",
                    "cn": [
                        {
                            "type": "basiceventbinding",
                            "reference": {
                                "name": "listeners",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "fn": "onMytogglefieldChange",
                                "implHandler": [
                                    "",
                                    "this.websocketSend({",
                                    "    action:'internetVideo',",
                                    "    enabled:newValue,",
                                    "    server:this.queryById('internetServer').getValue(),",
                                    "    key:this.queryById('internetKey').getValue()",
                                    "});"
                                ],
                                "name": "change"
                            },
                            "configAlternates": {
                                "fn": "string",
                                "implHandler": "code",
                                "name": "string"
                            },
                            "name": "onMytogglefieldChange",
                            "designerId": "0ce531db-5132-48aa-be7f-cced5bc758d0"
                        }
                    ]
                },
                {
                    "type": "Ext.field.Toggle",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "designer|displayName": "enableControlViaInternet",
                        "itemId": "mytogglefield1",
                        "label": "Control via Internet",
                        "labelWidth": 140
                    },
                    "configAlternates": {
                        "designer|displayName": "string",
                        "itemId": "string",
                        "label": "string",
                        "labelWidth": "auto"
                    },
                    "name": "MyToggleField1",
                    "designerId": "fd2ea6b1-f281-49e9-8e67-0d89ac9708d1",
                    "cn": [
                        {
                            "type": "basiceventbinding",
                            "reference": {
                                "name": "listeners",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "fn": "onMytogglefield1Change",
                                "implHandler": [
                                    "this.websocketSend({",
                                    "    action:'internetControl',",
                                    "    enabled:newValue,",
                                    "    server:this.queryById('internetServer').getValue(),",
                                    "    key:this.queryById('internetKey').getValue()",
                                    "});"
                                ],
                                "name": "change"
                            },
                            "configAlternates": {
                                "fn": "string",
                                "implHandler": "code",
                                "name": "string"
                            },
                            "name": "onMytogglefield1Change",
                            "designerId": "287b73cf-2b83-4291-8748-1929d3f74ee6"
                        }
                    ]
                }
            ]
        },
        {
            "type": "Ext.tab.Panel",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "iconCls": "x-fa fa-cog",
                "itemId": "tabConfig",
                "padding": "4 0 0 0",
                "title": "Config"
            },
            "configAlternates": {
                "activeItem": "number",
                "title": "string",
                "iconCls": "string",
                "itemId": "string",
                "padding": "auto"
            },
            "name": "MyTabPanel",
            "designerId": "487f962c-a6f3-490c-8743-e1edda1aac61",
            "cn": [
                {
                    "type": "Ext.Container",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "html": "<img src=\"resources/raspberry_pi_pins.png\">",
                        "iconCls": "x-fa fa-plug",
                        "title": "Connection Guide"
                    },
                    "configAlternates": {
                        "html": "string",
                        "iconCls": "string",
                        "title": "string"
                    },
                    "name": "MyContainer63",
                    "designerId": "1369c45b-ec43-4b64-9e2f-23e9094bf70d"
                },
                {
                    "type": "Ext.Container",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "iconCls": "x-fa fa-microchip",
                        "itemId": "hardwareConfigs",
                        "padding": "0 0 0 10",
                        "scrollable": true,
                        "title": "Hardware"
                    },
                    "configAlternates": {
                        "padding": "auto",
                        "title": "string",
                        "iconCls": "string",
                        "itemId": "string",
                        "scrollable": "auto"
                    },
                    "name": "MyContainer31",
                    "designerId": "1095ece9-9da4-4134-9c60-576cb687d6e3",
                    "cn": [
                        {
                            "type": "Ext.Toolbar",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "docked": "top",
                                "itemId": "mytoolbar1"
                            },
                            "configAlternates": {
                                "docked": "string",
                                "itemId": "string"
                            },
                            "name": "MyToolbar1",
                            "designerId": "956e1c34-7ca8-4203-b659-96ac7efe1e9c",
                            "cn": [
                                {
                                    "type": "Ext.Button",
                                    "reference": {
                                        "name": "items",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "iconCls": "x-fa fa-save",
                                        "text": "Save Changes"
                                    },
                                    "configAlternates": {
                                        "text": "string",
                                        "iconCls": "string"
                                    },
                                    "name": "MyButton1",
                                    "designerId": "c5279e24-6c26-4250-a610-1cbd5aa0c55a",
                                    "cn": [
                                        {
                                            "type": "basiceventbinding",
                                            "reference": {
                                                "name": "listeners",
                                                "type": "array"
                                            },
                                            "codeClass": null,
                                            "userConfig": {
                                                "fn": "onMybutton1Tap",
                                                "implHandler": [
                                                    "this.hardwareSave();"
                                                ],
                                                "name": "tap"
                                            },
                                            "configAlternates": {
                                                "fn": "string",
                                                "implHandler": "code",
                                                "name": "string"
                                            },
                                            "name": "onMybutton1Tap",
                                            "designerId": "3b3dd7d1-7de7-4109-a219-2b9401f279fe"
                                        }
                                    ]
                                },
                                {
                                    "type": "Ext.Button",
                                    "reference": {
                                        "name": "items",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "iconCls": "x-fa fa-plus",
                                        "text": "Add Hardware"
                                    },
                                    "configAlternates": {
                                        "iconCls": "string",
                                        "text": "string"
                                    },
                                    "name": "MyButton5",
                                    "designerId": "a5f4cca9-8a21-4b3f-a713-7e216fbe16b8",
                                    "cn": [
                                        {
                                            "type": "basiceventbinding",
                                            "reference": {
                                                "name": "listeners",
                                                "type": "array"
                                            },
                                            "codeClass": null,
                                            "userConfig": {
                                                "fn": "onMybutton5Tap",
                                                "implHandler": [
                                                    "this.hardwareShowAdd();"
                                                ],
                                                "name": "tap"
                                            },
                                            "configAlternates": {
                                                "fn": "string",
                                                "implHandler": "code",
                                                "name": "string"
                                            },
                                            "name": "onMybutton5Tap",
                                            "designerId": "465cbf5b-4e0e-452d-be3a-f030e7f8cefe"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "Ext.Container",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "html": "No Hardware Configured<BR><BR>Click <B><U>Add Hardware</U></B>",
                                "itemId": "noHardwareMsg",
                                "padding": 40,
                                "userCls": [
                                    "text-prompt-container"
                                ]
                            },
                            "configAlternates": {
                                "style": "object",
                                "html": "string",
                                "itemId": "string",
                                "padding": "auto",
                                "userCls": "typedarray"
                            },
                            "name": "MyContainer46",
                            "designerId": "77575598-7a3d-4796-bb9a-3fe5d57f7887"
                        },
                        {
                            "type": "Ext.Container",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "itemId": "hardwareItems",
                                "padding": 10
                            },
                            "configAlternates": {
                                "itemId": "string",
                                "padding": "auto"
                            },
                            "name": "MyContainer49",
                            "designerId": "2b491436-6fe0-4370-a422-555454ec6a93"
                        }
                    ]
                },
                {
                    "type": "Ext.tab.Panel",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "iconCls": "x-fa fa-gamepad",
                        "itemId": "mytabpanel1",
                        "title": "Control"
                    },
                    "configAlternates": {
                        "iconCls": "string",
                        "title": "string",
                        "itemId": "string"
                    },
                    "name": "MyTabPanel1",
                    "designerId": "3c0e95d1-8774-4ad0-9c16-fed8ffd46061",
                    "cn": [
                        {
                            "type": "Ext.Container",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "iconCls": "x-fa fa-cogs",
                                "scrollable": true,
                                "title": "Controls"
                            },
                            "configAlternates": {
                                "iconCls": "string",
                                "scrollable": "auto",
                                "title": "string"
                            },
                            "name": "MyContainer77",
                            "designerId": "d938c84e-d5d6-4ca7-91b5-8f497546363f",
                            "cn": [
                                {
                                    "type": "Ext.Toolbar",
                                    "reference": {
                                        "name": "items",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "docked": "top",
                                        "itemId": "mytoolbar2"
                                    },
                                    "configAlternates": {
                                        "docked": "string",
                                        "itemId": "string"
                                    },
                                    "name": "MyToolbar2",
                                    "designerId": "c706a381-0774-46e8-955e-a969483eb31d",
                                    "cn": [
                                        {
                                            "type": "Ext.Button",
                                            "reference": {
                                                "name": "items",
                                                "type": "array"
                                            },
                                            "codeClass": null,
                                            "userConfig": {
                                                "iconCls": "x-fa fa-save",
                                                "text": "Save Changes"
                                            },
                                            "configAlternates": {
                                                "text": "string",
                                                "iconCls": "string"
                                            },
                                            "name": "MyButton1",
                                            "designerId": "6373d2a3-f8cc-4e3d-b7d2-5255ecbdbf63",
                                            "cn": [
                                                {
                                                    "type": "basiceventbinding",
                                                    "reference": {
                                                        "name": "listeners",
                                                        "type": "array"
                                                    },
                                                    "codeClass": null,
                                                    "userConfig": {
                                                        "fn": "onMybutton1Tap1",
                                                        "implHandler": [
                                                            "this.controlSave();"
                                                        ],
                                                        "name": "tap"
                                                    },
                                                    "configAlternates": {
                                                        "fn": "string",
                                                        "implHandler": "code",
                                                        "name": "string"
                                                    },
                                                    "name": "onMybutton1Tap1",
                                                    "designerId": "176c30bc-f0b0-4710-96cc-6bbef2b4af3e"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Ext.Button",
                                            "reference": {
                                                "name": "items",
                                                "type": "array"
                                            },
                                            "codeClass": null,
                                            "userConfig": {
                                                "iconCls": "x-fa fa-plus",
                                                "text": "Add Control"
                                            },
                                            "configAlternates": {
                                                "iconCls": "string",
                                                "text": "string"
                                            },
                                            "name": "MyButton5",
                                            "designerId": "b55c49c1-3cc9-434a-a721-479b50cc23d3",
                                            "cn": [
                                                {
                                                    "type": "basiceventbinding",
                                                    "reference": {
                                                        "name": "listeners",
                                                        "type": "array"
                                                    },
                                                    "codeClass": null,
                                                    "userConfig": {
                                                        "fn": "onMybutton5Tap1",
                                                        "implHandler": [
                                                            "this.controlShowAdd();"
                                                        ],
                                                        "name": "tap"
                                                    },
                                                    "configAlternates": {
                                                        "fn": "string",
                                                        "implHandler": "code",
                                                        "name": "string"
                                                    },
                                                    "name": "onMybutton5Tap1",
                                                    "designerId": "eb9e678c-350e-429c-a982-57ceb1759ce2"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "Ext.Container",
                                    "reference": {
                                        "name": "items",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "html": "No Controls Configured<BR><BR>Click <B><U>Add Control</U></B>",
                                        "itemId": "noControlsMsg",
                                        "padding": 40,
                                        "userCls": [
                                            "text-prompt-container"
                                        ]
                                    },
                                    "configAlternates": {
                                        "style": "object",
                                        "html": "string",
                                        "itemId": "string",
                                        "padding": "auto",
                                        "userCls": "typedarray"
                                    },
                                    "name": "MyContainer48",
                                    "designerId": "3a852877-2d2f-409b-b93a-3f3e0104ed5e"
                                },
                                {
                                    "type": "Ext.Container",
                                    "reference": {
                                        "name": "items",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "itemId": "controlItems",
                                        "padding": 10
                                    },
                                    "configAlternates": {
                                        "itemId": "string",
                                        "padding": "auto"
                                    },
                                    "name": "MyContainer50",
                                    "designerId": "8d44c779-d034-40cc-aaf7-e6a22c1bbf9b"
                                }
                            ]
                        },
                        {
                            "type": "linkedinstance",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "iconCls": "x-fa fa-gamepad",
                                "itemId": "controllerMapping",
                                "title": "Controller Mapping"
                            },
                            "configAlternates": {
                                "iconCls": "string",
                                "title": "string",
                                "itemId": "string"
                            },
                            "name": "gamepadmapping",
                            "designerId": "72ebf4b7-78c5-4032-9a48-c654f81874c5",
                            "masterInstanceId": "abecd0d9-7fdf-4245-b1a2-4165f72320da",
                            "cn": [
                                {
                                    "type": "basiceventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "designer|params": [
                                            "data"
                                        ],
                                        "fn": "onContainerWebsocketsend",
                                        "implHandler": [
                                            "this.websocketSend(data);"
                                        ],
                                        "name": "websocketsend"
                                    },
                                    "configAlternates": {
                                        "designer|params": "typedarray",
                                        "fn": "string",
                                        "implHandler": "code",
                                        "name": "string"
                                    },
                                    "name": "onContainerWebsocketsend",
                                    "designerId": "742120ce-a43a-46b1-9e75-70be979fa18c"
                                },
                                {
                                    "type": "basiceventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "designer|params": [
                                            "newMappings"
                                        ],
                                        "fn": "onContainerMappingsUpdated",
                                        "implHandler": [
                                            "this.config.controllerMapping = newMappings;",
                                            "",
                                            "this.configLoad(this.config);"
                                        ],
                                        "name": "mappingsUpdated"
                                    },
                                    "configAlternates": {
                                        "designer|params": "typedarray",
                                        "fn": "string",
                                        "implHandler": "code",
                                        "name": "string"
                                    },
                                    "name": "onContainerMappingsUpdated",
                                    "designerId": "d0d7cb3f-5e55-4d6e-bac2-3ab85bb3628f"
                                }
                            ]
                        },
                        {
                            "type": "Ext.tab.Bar",
                            "reference": {
                                "name": "tabBar",
                                "type": "object"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "docked": "top",
                                "padding": "10 0 0 100"
                            },
                            "configAlternates": {
                                "docked": "string",
                                "padding": "auto"
                            },
                            "name": "MyTabBar1",
                            "designerId": "193b291e-335f-4708-a981-94533c0bf942"
                        },
                        {
                            "type": "basiceventbinding",
                            "reference": {
                                "name": "listeners",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "fn": "onMytabpanel1ActiveItemChange",
                                "implHandler": [
                                    "let activeItemId = value.getItemId();",
                                    "",
                                    "let controllerMapping = this.queryById('controllerMapping');",
                                    "if(activeItemId === 'controllerMapping'){",
                                    "    controllerMapping.startControllerLoop();",
                                    "}else{",
                                    "    controllerMapping.stopControllerLoop();",
                                    "}"
                                ],
                                "name": "activeItemchange"
                            },
                            "configAlternates": {
                                "fn": "string",
                                "implHandler": "code",
                                "name": "string"
                            },
                            "name": "onMytabpanel1ActiveItemChange",
                            "designerId": "3d767a0c-ba92-4ed1-9d9f-ce0737b9fcd8"
                        }
                    ]
                },
                {
                    "type": "Ext.Container",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "iconCls": "x-fa fa-exchange",
                        "layout": "fit",
                        "title": "Config Import/Export"
                    },
                    "configAlternates": {
                        "layout": "string",
                        "title": "string",
                        "iconCls": "string"
                    },
                    "name": "MyContainer43",
                    "designerId": "ce27cbf0-ecef-4d11-b953-d9aaf0c873af",
                    "cn": [
                        {
                            "type": "Ext.Toolbar",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "docked": "top",
                                "hidden": false
                            },
                            "configAlternates": {
                                "docked": "string",
                                "hidden": "boolean"
                            },
                            "name": "MyToolbar",
                            "designerId": "d538da94-13fe-4d7a-8058-f55c50ff2fb1",
                            "cn": [
                                {
                                    "type": "Ext.Button",
                                    "reference": {
                                        "name": "items",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "text": "Load Defaults"
                                    },
                                    "configAlternates": {
                                        "text": "string"
                                    },
                                    "name": "MyButton13",
                                    "designerId": "80525ecb-e59a-489d-8b41-571771e1797e",
                                    "cn": [
                                        {
                                            "type": "basiceventbinding",
                                            "reference": {
                                                "name": "listeners",
                                                "type": "array"
                                            },
                                            "codeClass": null,
                                            "userConfig": {
                                                "fn": "onMybutton13Tap",
                                                "implHandler": [
                                                    "this.websocketSend({",
                                                    "    action:'configDefaults'",
                                                    "});"
                                                ],
                                                "name": "tap"
                                            },
                                            "configAlternates": {
                                                "fn": "string",
                                                "implHandler": "code",
                                                "name": "string"
                                            },
                                            "name": "onMybutton13Tap",
                                            "designerId": "ce91947e-9f12-4983-8a90-b1d307d68c6d"
                                        }
                                    ]
                                },
                                {
                                    "type": "Ext.Spacer",
                                    "reference": {
                                        "name": "items",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "width": 150
                                    },
                                    "configAlternates": {
                                        "width": "number"
                                    },
                                    "name": "MySpacer1",
                                    "designerId": "adb07427-e443-41b9-a760-1b7d8fb09f21"
                                },
                                {
                                    "type": "Ext.Button",
                                    "reference": {
                                        "name": "items",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "disabled": true,
                                        "text": "Save"
                                    },
                                    "configAlternates": {
                                        "text": "string",
                                        "disabled": "boolean"
                                    },
                                    "name": "MyButton11",
                                    "designerId": "8616b8dc-6a1b-4393-95ee-77e020fdacd8",
                                    "cn": [
                                        {
                                            "type": "basiceventbinding",
                                            "reference": {
                                                "name": "listeners",
                                                "type": "array"
                                            },
                                            "codeClass": null,
                                            "userConfig": {
                                                "fn": "onMybutton11Tap",
                                                "name": "tap"
                                            },
                                            "configAlternates": {
                                                "fn": "string",
                                                "name": "string"
                                            },
                                            "name": "onMybutton11Tap",
                                            "designerId": "00360bec-763f-454d-9696-b4676e146656"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "Ext.field.TextArea",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "itemId": "fullConfig",
                                "label": "Full Config",
                                "labelAlign": "top",
                                "margin": 10,
                                "readOnly": true
                            },
                            "configAlternates": {
                                "label": "string",
                                "labelAlign": "string",
                                "margin": "auto",
                                "itemId": "string",
                                "readOnly": "boolean"
                            },
                            "name": "MyTextArea",
                            "designerId": "da2ac0c8-f310-4228-9eb0-647976663a41"
                        }
                    ]
                },
                {
                    "type": "Ext.Container",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "iconCls": "x-fa fa-list",
                        "layout": "fit",
                        "title": "Log"
                    },
                    "configAlternates": {
                        "layout": "string",
                        "title": "string",
                        "iconCls": "string"
                    },
                    "name": "MyContainer38",
                    "designerId": "1e0d5711-4bac-46be-8648-00c220b1d7c8",
                    "cn": [
                        {
                            "type": "Ext.field.TextArea",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "itemId": "logEntries",
                                "labelAlign": "top",
                                "margin": 10
                            },
                            "configAlternates": {
                                "label": "string",
                                "labelAlign": "string",
                                "margin": "auto",
                                "itemId": "string"
                            },
                            "name": "MyTextArea",
                            "designerId": "418a382e-0d73-4f75-ac6a-b5040320b289"
                        }
                    ]
                },
                {
                    "type": "Ext.tab.Bar",
                    "reference": {
                        "name": "tabBar",
                        "type": "object"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "docked": "top",
                        "padding": "10 0 0 50"
                    },
                    "configAlternates": {
                        "docked": "string",
                        "padding": "auto"
                    },
                    "name": "MyTabBar",
                    "designerId": "952bc923-7a08-4690-ac3a-4ccf64907fae"
                }
            ]
        },
        {
            "type": "basiceventbinding",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onFormpanelPainted",
                "implHandler": [
                    "if(this.init){",
                    "    return;",
                    "}else{",
                    "    this.init = true;",
                    "}",
                    "",
                    "this.webSocketCon = null;",
                    "this.messageQueue = [];",
                    "this.websocketInit();",
                    "",
                    "this.liveControls = {};",
                    "this.liveControlsConfig = false;",
                    "this.websocketSendAction(\"configRead\",true);",
                    "",
                    "//this.controllerInit();",
                    "this.queryById('liveController').initController();",
                    "",
                    "this.hardware = {};",
                    "this.getViewModel().getStore('hardwareStore').on('datachanged',function(){",
                    "    this.controlSyncHardwareStores();",
                    "}, this);"
                ],
                "name": "painted"
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code",
                "name": "string"
            },
            "name": "onFormpanelPainted",
            "designerId": "77d2f643-5722-4c78-92db-517bc808093f"
        },
        {
            "type": "basiceventbinding",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onTabpanelActiveItemChange",
                "implHandler": [
                    "let activeItemId = value.getItemId();",
                    "if(activeItemId === 'tabVideo'){",
                    "    this.startVideo();",
                    "    this.websocketSendAction('startAudio');",
                    "}",
                    "",
                    "let liveController = this.queryById('liveController');",
                    "let controllerMapping = this.queryById('controllerMapping');",
                    "",
                    "if(activeItemId === 'tabConfig'){",
                    "    controllerMapping.startControllerLoop();",
                    "    liveController.stopControllerLoop();",
                    "}else{",
                    "    controllerMapping.stopControllerLoop();",
                    "    liveController.startControllerLoop();",
                    "}"
                ],
                "name": "activeItemchange"
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code",
                "name": "string"
            },
            "name": "onTabpanelActiveItemChange",
            "designerId": "24096b57-b34d-4282-b2d6-2f4316057dcd"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "trexscream",
                "implHandler": [
                    "this.websocketSendAction('trexscream');"
                ]
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code"
            },
            "name": "trexscream",
            "designerId": "af2349d8-716d-4e43-b095-c7fbdc947b69"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "playnextsound",
                "implHandler": [
                    "this.websocketSendAction('playnextsound');"
                ]
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code"
            },
            "name": "playnextsound",
            "designerId": "b0d0ef60-5716-4d3a-bbf4-6b854353041a"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "message",
                    "queue"
                ],
                "fn": "websocketSend",
                "implHandler": [
                    "var queueP = queue || false;",
                    "",
                    "if(this.webSocketCon === null || this.webSocketCon.readyState !== WebSocket.OPEN){",
                    "    console.log('Sending to WebSocket failed - not connected');",
                    "    if(queueP){",
                    "        this.messageQueue.push(message);",
                    "    }",
                    "    return false;",
                    "}",
                    "",
                    "this.webSocketCon.send(Ext.encode(message));"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "websocketSend",
            "designerId": "cc3f369e-68cd-4999-9abf-4434d8b6d07c"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "action",
                    "queue"
                ],
                "fn": "websocketSendAction",
                "implHandler": [
                    "var queueP = queue || false;",
                    "",
                    "this.websocketSend({",
                    "    action:action",
                    "}, queueP);"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "websocketSendAction",
            "designerId": "38e9071f-a4e7-49ef-bf4d-bb077f7d6d4e"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "websocketInit",
                "implHandler": [
                    "this.messageQueue = [];",
                    "",
                    "this.webSocketCon = null;",
                    "",
                    "this.websocketOpen();"
                ]
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code"
            },
            "name": "websocketInit",
            "designerId": "953eb792-5b4d-4a47-a4d1-f7618706aab2"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "websocketOpen",
                "implHandler": [
                    "if(this.webSocketCon !== null &&",
                    "   ( this.webSocketCon.readyState === WebSocket.CONNECTING ||",
                    "    this.webSocketCon.readyState === WebSocket.OPEN )",
                    "  ){",
                    "    //if the socket is already open, or connecting. dont open more than 1",
                    "    this.appendDebugOutput(\"Websocket already open or connecting\");",
                    "    return;",
                    "}",
                    "",
                    "this.appendDebugOutput(\"Opening Websocket\");",
                    "",
                    "try{",
                    "    this.webSocketCon = new WebSocket('ws://'+window.location.host+'/wsapi');",
                    "}catch(err){",
                    "    this.appendDebugOutput(\"Exception opening socket!\");",
                    "    this.appendDebugOutput(err.message);",
                    "    this.webSocketCon = null;",
                    "    return false;",
                    "}",
                    "",
                    "this.webSocketCon.onopen = function(){",
                    "    this.websocketSendAction('getStatus');",
                    "    if(this.messageQueue.length > 0){",
                    "        Ext.each(this.messageQueue, function(msg){",
                    "            this.websocketSend(msg);",
                    "        }, this);",
                    "        this.messageQueue = [];",
                    "    }",
                    "}.bind(this);",
                    "",
                    "this.webSocketCon.onmessage = this.websocketReceive.bind(this);",
                    "",
                    "this.webSocketCon.onerror = function(event){",
                    "    this.appendDebugOutput(\"error with websocket! \" + event.error);",
                    "}.bind(this);",
                    "",
                    "this.webSocketCon.onclose = function(event){",
                    "    this.appendDebugOutput(\"websocket closed! \"+event.code+\" \"+event.reason);",
                    "",
                    "    this.webSocketCon = null;",
                    "    this.websocketReconnect();",
                    "}.bind(this);",
                    ""
                ]
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code"
            },
            "name": "websocketOpen",
            "designerId": "f59907aa-cee0-496f-b0bc-e3feeded7a8a"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "websocketReconnect",
                "implHandler": [
                    "Ext.defer(function(){ this.websocketOpen(); },500,this);"
                ]
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code"
            },
            "name": "websocketReconnect",
            "designerId": "fd87ecf0-81a5-417f-ba51-2beb5dc0c3d5"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "message"
                ],
                "fn": "websocketReceive",
                "implHandler": [
                    "// console.log('recieved message');",
                    "// console.log(message.data);",
                    "//this.appendDebugOutput('recieved message: '+message.data);",
                    "",
                    "",
                    "var jsonData = JSON.parse(message.data);",
                    "",
                    "if(!jsonData.cmd){",
                    "    console.log('websocketReceive Missing cmd!', jsonData);",
                    "    return false;",
                    "}",
                    "switch(jsonData.cmd){",
                    "    default:",
                    "        console.log('websocketReceive Invalid cmd!', jsonData);",
                    "        break;",
                    "    case 'config':",
                    "        this.configLoad(jsonData.config);",
                    "        break;",
                    "    case 'status':",
                    "        this.msgUpdateStatus(jsonData);",
                    "        break;",
                    "    case 'pidConstants':",
                    "        this.msgUpdatePidConstants(jsonData);",
                    "        break;",
                    "    case 'videoRunning':",
                    "        this.checkVideoRunningResponse(jsonData);",
                    "        break;",
                    "}",
                    "",
                    ""
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "websocketReceive",
            "designerId": "65561fbe-95b6-44dc-8109-67c0dd9a97cb"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "config"
                ],
                "fn": "configLoad",
                "implHandler": [
                    "this.showConfig(config);",
                    "this.config = config;",
                    "",
                    "if(config.hardware){",
                    "    this.hardwareLoadConfig(config.hardware, true);",
                    "}",
                    "let controllerMapping = this.queryById('controllerMapping');",
                    "",
                    "if(config.controls){",
                    "    this.controlsLoadConfig(config.controls);",
                    "    this.liveControls = this.queryById('liveControls').loadConfig(config.controls, this.hardware);",
                    "    this.liveControlsConfig = config.controls;",
                    "    controllerMapping.updateMappingStores(config.controls);",
                    "    if(this.controllerWindowControls){",
                    "        this.liveControlsWindow = this.controllerWindowControls.loadConfig(config.controls, this.hardware);",
                    "    }",
                    "}",
                    "if(config.controllerMapping){",
                    "    controllerMapping.loadConfig(config.controllerMapping);",
                    "    this.queryById('liveController').loadConfig(config.controllerMapping);",
                    "}"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "configLoad",
            "designerId": "db7df046-3974-45ad-999f-57662eb4379b"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "controlShowAdd",
                "implHandler": [
                    "if(!this.addControlTypeWin){",
                    "",
                    "    this.addControlTypeWin = Ext.create({",
                    "        xtype:'addcontroltype',",
                    "        floated:true,",
                    "        modal:true,",
                    "        listeners:{",
                    "            scope:this,",
                    "            typeselected:function(type){",
                    "                this.controlAdd(type);",
                    "            }",
                    "        }",
                    "    });",
                    "",
                    "}",
                    "",
                    "this.addControlTypeWin.show();"
                ]
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code"
            },
            "name": "controlShowAdd",
            "designerId": "a909d239-c6a2-404f-b43f-c453178d6236"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "type",
                    "config"
                ],
                "fn": "controlAdd",
                "implHandler": [
                    "config = config || false;",
                    "",
                    "if(config.hardwareId){",
                    "    config.hardware = this.hardware[config.hardwareId];",
                    "}",
                    "",
                    "var panel;",
                    "",
                    "switch(type){",
                    "    default:",
                    "        return false;",
                    "    case 'motorslider':",
                    "    case 'button':",
                    "    case 'stick':",
                    "    case 'slider':",
                    "        panel = Ext.create({",
                    "            xtype:'control'+type+'config',",
                    "            hidden:true,",
                    "            margin:'3 0 0 0',",
                    "            label:config.name,",
                    "            hardware: config.hardware,",
                    "            controlId: config.controlId ? config.controlId : this.generateId(),",
                    "            listeners:{",
                    "                scope:this,",
                    "                controlmoveup:function(){",
                    "                    this.controlMove(panel,'up');",
                    "                },",
                    "                controlmovedown:function(){",
                    "                    this.controlMove(panel,'down');",
                    "                },",
                    "                controldelete:function(){",
                    "                    this.controlDelete(panel);",
                    "                }",
                    "            }",
                    "        });",
                    "        break;",
                    "",
                    "}",
                    "",
                    "this.queryById('noControlsMsg').hide();",
                    "",
                    "this.queryById('controlItems').add(panel);",
                    "",
                    "panel.show({type:'slide', direction:'right'});",
                    "",
                    "let hardware = panel.queryById('hardware');",
                    "if(hardware && hardware.syncHardwareStore){",
                    "    hardware.syncHardwareStore(this.getViewModel().getStore('hardwareStore'));",
                    "}",
                    "if(type==='stick'){",
                    "    panel.queryById('xhardware').syncHardwareStore(this.getViewModel().getStore('hardwareStore'));",
                    "    panel.queryById('yhardware').syncHardwareStore(this.getViewModel().getStore('hardwareStore'));",
                    "}",
                    "",
                    "if(config && panel.setConfigValues){",
                    "    panel.setConfigValues(config);",
                    "}"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "controlAdd",
            "designerId": "d2f429c4-88ba-482b-b2a1-cb625ee607eb"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "controlSave",
                "implHandler": [
                    "let controlItems = this.queryById('controlItems');",
                    "",
                    "let controlConfig = [];",
                    "Ext.each(controlItems.items.items, function(item){",
                    "    controlConfig.push(item.getConfigValues());",
                    "});",
                    "",
                    "this.websocketSend({",
                    "    action:'updateConfig',",
                    "    key:'controls',",
                    "    config:controlConfig",
                    "});",
                    "",
                    "this.controlsLoadConfig(controlConfig);",
                    "this.liveControls = this.queryById('liveControls').loadConfig(controlConfig, this.hardware);",
                    "",
                    "this.queryById('controllerMapping').updateMappingStores(controlConfig);"
                ]
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code"
            },
            "name": "controlSave",
            "designerId": "fb921e44-338b-4be0-82f9-9f2d9d7fad8b"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "controls"
                ],
                "fn": "controlsLoadConfig",
                "implHandler": [
                    "this.queryById('controlItems').removeAll();",
                    "",
                    "Ext.each(controls,function(controlItem){",
                    "    this.controlAdd(controlItem.type, controlItem);",
                    "},this);"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "controlsLoadConfig",
            "designerId": "5c6b8d43-4c6f-44f7-984a-867cd6d42516"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "panel"
                ],
                "fn": "controlDelete",
                "implHandler": [
                    "Ext.destroy(panel);",
                    "",
                    "if(this.queryById('controlItems').getItems().length < 1){",
                    "    this.queryById('noControlsMsg').show({type:'fade'});",
                    "}"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "controlDelete",
            "designerId": "d5ad59f9-03ec-4e32-8b5f-dee2bf42ea06"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "control",
                    "direction"
                ],
                "fn": "controlMove",
                "implHandler": [
                    "let parent = this.queryById('controlItems');",
                    "",
                    "let currentIndex = parent.items.items.indexOf(control);",
                    "",
                    "if(direction === 'up'){",
                    "    currentIndex--;",
                    "}else{",
                    "    currentIndex++;",
                    "}",
                    "",
                    "parent.remove(control, false);",
                    "parent.insert(currentIndex, control);",
                    ""
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "controlMove",
            "designerId": "a2b149a3-3dd9-473c-8518-8b71b3105f16"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "controlSyncHardwareStores",
                "implHandler": [
                    "let hardwareStore = this.getViewModel().getStore('hardwareStore');",
                    "",
                    "Ext.each(this.queryById('controlItems').items.items, function(item){",
                    "    let hardware = item.queryById('hardware');",
                    "    if(hardware && hardware.syncHardwareStore){",
                    "        hardware.syncHardwareStore(hardwareStore);",
                    "    }else{",
                    "        console.log('missing syncHardwareStore func on component', item);",
                    "    }",
                    "});"
                ]
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code"
            },
            "name": "controlSyncHardwareStores",
            "designerId": "36db21ef-eea9-4227-a92f-3701fd43fd82"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "hardware",
                    "animate"
                ],
                "fn": "hardwareLoadConfig",
                "implHandler": [
                    "console.log('hardwareLoadConfig');",
                    "this.hardware = {};",
                    "for(var i in hardware){",
                    "    let hi = hardware[i];",
                    "    this.hardware[hi.hardwareId] = hi;",
                    "    if(hi.type==='motor' && hi.motorDriverType==='l298n'){",
                    "        this.hardware[hi.hardwareId+':1'] = hi;",
                    "        this.hardware[hi.hardwareId+':2'] = hi;",
                    "    }",
                    "}",
                    "",
                    "let hardwareStore = this.getViewModel().getStore('hardwareStore');",
                    "",
                    "let model = hardwareStore.getModel();",
                    "",
                    "this.queryById('hardwareItems').removeAll(true,true);",
                    "",
                    "let hardwareRecords = [];",
                    "",
                    "Ext.each(hardware,function(itemConfig){",
                    "    this.hardwareAdd(itemConfig.type, itemConfig, animate);",
                    "",
                    "    switch(itemConfig.type){",
                    "        default:",
                    "            hardwareRecords.push(model.create(itemConfig));",
                    "            break;",
                    "        case 'motor':",
                    "            switch(itemConfig.motorDriverType){",
                    "                case 'l298n':",
                    "                    let hardwareId = itemConfig.hardwareId;",
                    "",
                    "                    let motor1 = {",
                    "                        display:itemConfig.type+' '+itemConfig.name1,",
                    "                        name:itemConfig.name1,",
                    "                        type:itemConfig.type,",
                    "                        hardwareId: itemConfig.hardwareId+':1'",
                    "                    };",
                    "                    hardwareRecords.push(model.create(motor1));",
                    "",
                    "",
                    "                    let motor2 = {",
                    "                        display:itemConfig.type+' '+itemConfig.name2,",
                    "                        name:itemConfig.name2,",
                    "                        type:itemConfig.type,",
                    "                        hardwareId: itemConfig.hardwareId+':2'",
                    "                    };",
                    "                    hardwareRecords.push(model.create(motor2));",
                    "                    break;",
                    "                case 'pwmesc':",
                    "                    itemConfig.name = itemConfig.name1;",
                    "                    hardwareRecords.push(model.create(itemConfig));",
                    "                    break;",
                    "            }",
                    "    }",
                    "},this);",
                    "",
                    "hardwareStore.removeAll();",
                    "hardwareStore.add(hardwareRecords);"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "hardwareLoadConfig",
            "designerId": "7ba66cc6-75c8-4286-a053-2212ab8e97cd"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "type",
                    "config",
                    "animate"
                ],
                "fn": "hardwareAdd",
                "implHandler": [
                    "config = config || false;",
                    "",
                    "let xtype;",
                    "",
                    "switch(type){",
                    "    default:",
                    "        return false;",
                    "    case 'motor':",
                    "    case 'i2c':",
                    "    case 'gpio':",
                    "    case 'servo':",
                    "        xtype = 'hardware' + type;",
                    "        break;",
                    "}",
                    "let panel = Ext.create({",
                    "     xtype:xtype,",
                    "     hidden:animate ? true : false,",
                    "     //userCls:'hardware-panel',",
                    "     //innerCls:'hardware-panel-inner',",
                    "     margin:'3 0 0 0',",
                    "     border:true,",
                    "     listeners:{",
                    "         scope:this,",
                    "         hardwaredelete:function(hardware){",
                    "             this.hardwareDelete(hardware);",
                    "         }",
                    "     }",
                    " });",
                    "",
                    "this.queryById('noHardwareMsg').hide();",
                    "",
                    "this.queryById('hardwareItems').add(panel);",
                    "if(animate){",
                    "    panel.show({type:'slide', direction:'right'});",
                    "}",
                    "",
                    "if(!config){",
                    "    config = {",
                    "        name:'',",
                    "        type:type,",
                    "        config:{},",
                    "        hardwareId:this.generateId()",
                    "    };",
                    "",
                    "}",
                    "panel.setConfigValues(config);"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "hardwareAdd",
            "designerId": "3bd38c32-156c-4a4e-85aa-451f2c49fc02"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "hardwareShowAdd",
                "implHandler": [
                    "if(!this.addHardwareTypeWin){",
                    "",
                    "    this.addHardwareTypeWin = Ext.create({",
                    "        xtype:'addhardwaretype',",
                    "        floated:true,",
                    "        modal:true,",
                    "        listeners:{",
                    "            scope:this,",
                    "            typeselected:function(type){",
                    "                this.hardwareAdd(type);",
                    "            }",
                    "        }",
                    "    });",
                    "",
                    "}",
                    "",
                    "this.addHardwareTypeWin.show();"
                ]
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code"
            },
            "name": "hardwareShowAdd",
            "designerId": "8d62f47c-7570-4377-bce6-806492e89e62"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "hardware"
                ],
                "fn": "hardwareDelete",
                "implHandler": [
                    "Ext.destroy(hardware);",
                    "",
                    "if(this.queryById('hardwareItems').getItems().length < 1){",
                    "    this.queryById('noHardwareMsg').show({type:'fade'});",
                    "}",
                    "",
                    "//this.getViewModel().getStore('hardwareStore').remove(hardware.hardwareStoreRec);",
                    "",
                    "//hardware.hardwareStoreRec.destroy();",
                    "//delete hardware.hardwareStoreRec;",
                    "",
                    "//this.syncControlStores();"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "hardwareDelete",
            "designerId": "51a2368d-875b-4ce2-84ad-2ceacf0c0304"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "generateId",
                "implHandler": [
                    "let id = (+new Date()).toString(36);",
                    "return id;"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "generateId",
            "designerId": "c2e2b3de-ef88-462b-9fdc-768add77514e"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "hardwareSave",
                "implHandler": [
                    "let hardwareItems = this.queryById('hardwareItems');",
                    "",
                    "let hardwareConfig = [];",
                    "",
                    "//let hardwareStore = this.getViewModel().getStore('hardwareStore');",
                    "//hardwareStore.removeAll();",
                    "//let model = hardwareStore.getModel();",
                    "//let hardwareRecords = [];",
                    "let usedPins = [];",
                    "let pinErrors = [];",
                    "let pinError = 'Invalid Pin';",
                    "",
                    "let configValid = true;",
                    "Ext.each(hardwareItems.items.items, function(hardwareItem){",
                    "    if(!hardwareItem.validate()){",
                    "        pinErrors.push(\"Invalid Pin Numbers! Please only use pin # 2 to 27.\");",
                    "        configValid = false;",
                    "    }",
                    "",
                    "    let hardwareItemValues = hardwareItem.getConfigValues();",
                    "",
                    "    switch(hardwareItemValues.type){",
                    "        case 'motor':",
                    "            switch(hardwareItemValues.motorDriverType){",
                    "                case 'pca9685':",
                    "                    break;",
                    "                case 'l298n':",
                    "                    if(hardwareItemValues.aen == '' ) break;",
                    "                    if( usedPins.includes(hardwareItemValues.aen)){",
                    "                        pinErrors.push('L298 Motor Pin # '+hardwareItemValues.aen+' for A EN is used in more than once!');",
                    "                        hardwareItem.queryById('aen').setError(pinError);",
                    "                        configValid = false;",
                    "                    }",
                    "                    usedPins.push(hardwareItemValues.aen);",
                    "",
                    "                    if(hardwareItemValues.ain1 != '' ) break;",
                    "                        if(usedPins.includes(hardwareItemValues.ain1)){",
                    "                            pinErrors.push('L298 Motor Pin # '+hardwareItemValues.ain1+' for A IN1 is used in more than once!');",
                    "                            hardwareItem.queryById('ain1').setError(pinError);",
                    "                            configValid = false;",
                    "                        }",
                    "                        usedPins.push(hardwareItemValues.ain1);",
                    "",
                    "                    if(hardwareItemValues.ain2 != '' ) break;",
                    "                    if(usedPins.includes(hardwareItemValues.ain2)){",
                    "                        pinErrors.push('L298 Motor Pin # '+hardwareItemValues.ain2+' for A IN2 is used in more than once!');",
                    "                        hardwareItem.queryById('ain2').setError(pinError);",
                    "                        configValid = false;",
                    "                    }",
                    "                    usedPins.push(hardwareItemValues.ain2);",
                    "",
                    "                    if(hardwareItemValues.ben != '' ) break;",
                    "                    if(usedPins.includes(hardwareItemValues.ben)){",
                    "                        pinErrors.push('L298 Motor Pin # '+hardwareItemValues.ben+' for B EN is used in more than once!');",
                    "                        hardwareItem.queryById('ben').setError(pinError);",
                    "                        configValid = false;",
                    "                    }",
                    "                    usedPins.push(hardwareItemValues.ben);",
                    "",
                    "                    if(hardwareItemValues.bin3 != '' ) break;",
                    "                    if( usedPins.includes(hardwareItemValues.bin3)){",
                    "                        pinErrors.push('L298 Motor Pin # '+hardwareItemValues.bin3+' for B IN3 is used in more than once!');",
                    "                        hardwareItem.queryById('bin3').setError(pinError);",
                    "                        configValid = false;",
                    "                    }",
                    "                    usedPins.push(hardwareItemValues.bin3);",
                    "",
                    "                    if(hardwareItemValues.bin4 != '' ) break;",
                    "                    if( usedPins.includes(hardwareItemValues.bin4)){",
                    "                        pinErrors.push('L298 Motor Pin # '+hardwareItemValues.bin4+' for B IN4 is used in more than once!');",
                    "                        hardwareItem.queryById('bin4').setError(pinError);",
                    "                        configValid = false;",
                    "                    }",
                    "                    usedPins.push(hardwareItemValues.bin4);",
                    "                    break;",
                    "",
                    "                case 'esc':",
                    "                    if(hardwareItemValues.pin == null ){",
                    "                        pinErrors.push('RC ESC Motor Pin is required');",
                    "                        hardwareItem.queryById('pin').setError(pinError);",
                    "                        configValid = false;",
                    "                        break;",
                    "                    }",
                    "                    if(usedPins.includes(hardwareItemValues.pin)){",
                    "                        pinErrors.push('RC ESC Motor Pin # '+hardwareItemValues.pin+' is used in more than once!');",
                    "                        hardwareItem.queryById('pin').setError(pinError);",
                    "                        configValid = false;",
                    "                    }",
                    "                    usedPins.push(hardwareItemValues.pin);",
                    "                    break;",
                    "            }",
                    "            break;",
                    "        case 'i2c':",
                    "            break;",
                    "        case 'gpio':",
                    "        case 'servo':",
                    "            if(hardwareItemValues.pin == null ){",
                    "                pinErrors.push('Pin is required');",
                    "                hardwareItem.queryById('pin').setError(pinError);",
                    "                configValid = false;",
                    "                break;",
                    "            }",
                    "            if(usedPins.includes(hardwareItemValues.pin)){",
                    "                pinErrors.push('Pin '+hardwareItemValues.pin+' is used in more than once!');",
                    "                hardwareItem.queryById('pin').setError(pinError);",
                    "                configValid = false;",
                    "            }",
                    "            usedPins.push(hardwareItemValues.pin);",
                    "            break;",
                    "",
                    "    }",
                    "",
                    "    hardwareConfig.push(hardwareItemValues);",
                    "",
                    "    //hardwareRecords.push(model.create(vals));",
                    "});",
                    "if(configValid !== true){",
                    "    Ext.Msg.alert('Errors Found!',pinErrors.join('<BR><BR>'));",
                    "    return;",
                    "}",
                    "",
                    "//panel.hardwareStoreRec = model.create(config);",
                    "//this.getViewModel().getStore('hardwareStore').add(panel.hardwareStoreRec);",
                    "",
                    "this.websocketSend({",
                    "    action:'updateConfig',",
                    "    key:'hardware',",
                    "    config:hardwareConfig",
                    "});",
                    "",
                    "this.hardwareLoadConfig(hardwareConfig, false);",
                    "//hardwareStore.add(hardwareRecords);",
                    "//this.controlSyncHardwareStores();"
                ]
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code"
            },
            "name": "hardwareSave",
            "designerId": "6f5f4e9f-1488-4f11-bd68-f60c0f22f7d3"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "stopSteeringMovement",
                "implHandler": [
                    "this.websocketSendAction('stopSteeringMovement');"
                ]
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code"
            },
            "name": "stopSteeringMovement",
            "designerId": "4ffffa73-bc40-43d3-9f7a-5fb15b7aa8dc"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value"
                ],
                "fn": "sendMove",
                "implHandler": [
                    "clearInterval(this.repeatMoveTimer);",
                    "",
                    "this.websocketSend({",
                    "    action:'move',",
                    "    y:this.moveY,",
                    "    x:this.moveX",
                    "});",
                    "",
                    "//if we are not stopped and nothings changed repeat the control message every 400ms.",
                    "if(this.moveY === 500 && this.moveX === 500){",
                    "    clearInterval();",
                    "}else{",
                    "    this.repeatMoveTimer = setInterval(() => {",
                    "        this.websocketSend({",
                    "            action:'move',",
                    "            y:this.moveY,",
                    "            x:this.moveX",
                    "        });",
                    "    },400);   ",
                    "}"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "sendMove",
            "designerId": "5952f4de-7c2c-4457-bea1-a7cfdd04431f"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "jsonData"
                ],
                "fn": "msgUpdateStatus",
                "implHandler": [
                    "// this.recievedMessages++;",
                    "this.chartedMessages++;",
                    "",
                    "",
                    "// if(this.recievedMessages > 100){",
                    "//     this.recievedMessages = 0;",
                    "//     this.clearDebugOutput();",
                    "//     //chartStore.removeAll();",
                    "// }",
                    "",
                    "",
                    "",
                    "if(this.chartStore.count() > 100){",
                    "    this.chartStore.removeAt(0,1);",
                    "}",
                    "",
                    "//this.steeringChart.suspendAnimation();",
                    "// if(this.chartArray.length > 100){",
                    "//     this.chartArray.shift();",
                    "// }",
                    "// this.chartArray.push([this.chartedMessages, jsonData.steeringCurrent, jsonData.steeringTargetPoint]);",
                    "",
                    "// this.chartStore.loadData(this.chartArray);",
                    "",
                    "this.chartStore.loadData([[this.chartedMessages, jsonData.steeringCurrent, jsonData.steeringTarget]], true);",
                    "",
                    "//this.steeringChart.resumeAnimation();",
                    "",
                    "this.queryById('steeringCurrent').setValue(jsonData.steeringCurrent);",
                    "this.queryById('pidError').setValue(jsonData.pidError);"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "msgUpdateStatus",
            "designerId": "75098630-8e03-4643-a8c0-74efd86a807e"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "jsonData"
                ],
                "fn": "msgUpdatePidConstants",
                "implHandler": [
                    "this.queryById('pidConstantP').setValue(jsonData.p);",
                    "this.queryById('pidConstantI').setValue(jsonData.i);",
                    "this.queryById('pidConstantD').setValue(jsonData.d);"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "msgUpdatePidConstants",
            "designerId": "e36181e7-0077-45d9-a166-9822a2481cf3"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "controllerInitDeleteMe",
                "implHandler": [
                    "this.controllerIgnore = false;",
                    "",
                    "this.lastSteeringChangeDefered = false;",
                    "this.moveX = 500;",
                    "this.moveY = 500;",
                    "",
                    "this.repeatMoveTimer = null;",
                    "",
                    "window.addEventListener(\"gamepadconnected\", this.gamepadConnected.bind(this));",
                    "window.addEventListener(\"gamepaddisconnected\", this.gamepadDisconnected.bind(this));",
                    "",
                    "this.trexPanSlider = this.queryById('trexPanSlider');",
                    "this.trexTiltSlider = this.queryById('trexTiltSlider');",
                    "",
                    "//this.fieldGamepadLeftRight = this.queryById('gamepadRightLeft');",
                    "//this.fieldGamepadFwd = this.queryById('gamepadFwd');",
                    "//this.fieldGamepadRev = this.queryById('gamepadRev');",
                    "",
                    "this.fieldGamepadRightX = this.queryById('gamepadRightX');",
                    "this.fieldGamepadRightY = this.queryById('gamepadRightY');",
                    "",
                    "this.fieldGamepadLeftX = this.queryById('gamepadLeftX');",
                    "this.fieldGamepadLeftY = this.queryById('gamepadLeftY');",
                    "",
                    "this.fieldSteeringSetPointText = this.queryById('steeringSetPointText');",
                    "this.fieldThrottleText = this.queryById('throttleText');",
                    "",
                    "this.fieldShootText = this.queryById('shootText');",
                    "",
                    "this.wsLeftStickX = -1;",
                    "this.wsLeftStickY = -1;",
                    "this.wsRightStickX = -1;",
                    "this.wsRightStickY = -1;",
                    "this.wsTriggerRight = -1;"
                ]
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code"
            },
            "name": "controllerInitDeleteMe",
            "designerId": "8e9ebc61-0af5-4deb-847b-6d749a15584c"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "e"
                ],
                "fn": "gamepadConnected",
                "implHandler": [
                    "console.log(\"gamepad connected\");",
                    "console.log(e);",
                    "",
                    "    this.appendDebugOutput(\"Gamepad #\"+e.gamepad.index+\" connected. Name: \"+e.gamepad.id+\". \"+e.gamepad.buttons.length+\" with \"+e.gamepad.axes.length+\" axes\");",
                    "",
                    "",
                    "//if(e.gamepad.id.indexOf('Xbox') !== -1){",
                    "    this.gamepadBeginLoop(e.gamepad);",
                    "//}else{",
                    "//    this.appendDebugOutput(\"Not an xbox controller. Skipping!\");",
                    "//}"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "gamepadConnected",
            "designerId": "65b6786e-94ec-40d2-a55e-e4d30ef2aca6"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "e"
                ],
                "fn": "gamepadDisconnected",
                "implHandler": [
                    "",
                    "    console.log(\"gamepad disconnected\");",
                    "    console.log(e);",
                    "",
                    "    this.appendDebugOutput(\"Gamepad disconnected at index \"+e.gamepad.index+\", id \"+e.gamepad.id);",
                    "",
                    "    clearInterval(this.gamePadLoops[e.gamepad.id]['loop']);"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "gamepadDisconnected",
            "designerId": "d480bc10-2132-4010-9d8a-1270d5f7aa47"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "gamepad"
                ],
                "fn": "gamepadBeginLoop",
                "implHandler": [
                    "if(!this.gamePadLoops){",
                    "    this.gamePadLoops = {};",
                    "}",
                    "",
                    "if(this.gamePadLoops[gamepad.id]){",
                    "    return;",
                    "}",
                    "this.gamePadLoops[gamepad.id] = {",
                    "    gamepad:gamepad",
                    "};",
                    "",
                    "this.gamePadLoops[gamepad.id]['loop'] = setInterval(this.gamepadUpdate.bind(this), 50, gamepad);",
                    ""
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "gamepadBeginLoop",
            "designerId": "3f0d757f-d26f-4b8d-b4dd-b2a0d0214e0e"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "gamepad"
                ],
                "fn": "gamepadUpdate",
                "implHandler": [
                    "return;",
                    "",
                    "if(this.controllerIgnore){",
                    "    console.log('ignored! gamepadUpdate');",
                    "    return;",
                    "}",
                    "console.log('gamepadUpdate');",
                    "",
                    "var gamepadUpdate = navigator.getGamepads();",
                    "",
                    "if(gamepadUpdate[gamepad.index]){",
                    "    gamepad = gamepadUpdate[gamepad.index];",
                    "}else{",
                    "    console.log('gamepad no longer available?');",
                    "    clearInterval(this.gamePadLoops[e.gamepad.id]['loop']);",
                    "    return;",
                    "}",
                    "//console.log(gamepad);",
                    "",
                    "//console.log('Fwd: '+gamepad.buttons[7].value);",
                    "//console.log('Rev: '+gamepad.buttons[6].value);",
                    "",
                    "//console.log('Right: '+gamepad.axes[2]);",
                    "",
                    "//X button",
                    "if(gamepad.buttons[2].value == 1 && this.button2lastValue != gamepad.buttons[2].value){",
                    "    this.trexscream();",
                    "}",
                    "this.button2lastValue = gamepad.buttons[2].value;",
                    "",
                    "//Y button",
                    "if(gamepad.buttons[3].value == 1 && this.button3lastValue != gamepad.buttons[3].value){",
                    "    this.playnextsound();",
                    "}",
                    "this.button3lastValue = gamepad.buttons[3].value;",
                    "",
                    "",
                    "var leftStickX = gamepad.axes[0];",
                    "this.fieldGamepadLeftX.setValue(leftStickX);",
                    "var leftStickXslider = Math.round((leftStickX * 500) + 500);",
                    "if(leftStickXslider !== this.wsLeftStickX ){",
                    "    this.wsLeftStickX = leftStickXslider;",
                    "    this.fieldSteeringSetPointText.setValue(leftStickXslider);",
                    "}",
                    "",
                    "var leftStickY = gamepad.axes[1];",
                    "this.fieldGamepadLeftY.setValue(leftStickY);",
                    "var leftStickYslider = 1000 - Math.round((leftStickY * 500) + 500);",
                    "if(leftStickYslider !== this.wsLeftStickY ){",
                    "    this.wsLeftStickY = leftStickYslider;",
                    "    this.fieldThrottleText.setValue(leftStickYslider);",
                    "}",
                    "",
                    "var rightStickX = gamepad.axes[2];",
                    "this.fieldGamepadRightX.setValue(rightStickX);",
                    "var rightStickXslider = 1000 - Math.round((rightStickX * 500) + 500);",
                    "if(rightStickXslider !== this.wsRightStickX ){",
                    "    this.wsRightStickX = rightStickXslider;",
                    "    this.trexPanSlider.setValue(rightStickXslider);",
                    "}",
                    "",
                    "",
                    "var rightStickY = gamepad.axes[3];",
                    "this.fieldGamepadRightY.setValue(rightStickY);",
                    "var rightStickYslider = Math.round((rightStickY * 500) + 500);",
                    "if(rightStickYslider !== this.wsRightStickY ){",
                    "    this.wsRightStickY = rightStickYslider;",
                    "    this.trexTiltSlider.setValue(rightStickYslider);",
                    "}",
                    "",
                    "var triggerRight = gamepad.buttons[7].value;",
                    "//this.fieldGamepadFwd.setValue(triggerRight);",
                    "",
                    "var triggerLeft = gamepad.buttons[6].value;",
                    "//this.fieldGamepadRev.setValue(triggerLeft);",
                    "",
                    "",
                    "if(triggerRight >= 0.8){",
                    "    triggerRight = 1;",
                    "}else{",
                    "    triggerRight = 0;",
                    "}",
                    "if(triggerRight !== this.wsTriggerRight ){",
                    "    this.wsTriggerRight = triggerRight;",
                    "    this.fieldShootText.setValue(triggerRight);",
                    "}",
                    "",
                    "if(this.virtualController){",
                    "    var vsRx = rightStickX * 50;",
                    "    var vsRy = rightStickY * 50;",
                    "    var vsLx = leftStickX * 50;",
                    "    var vsLy = leftStickY * 50;",
                    "",
                    "    //console.log(vsRx, vsRy, vsLx, vsLy);",
                    "    this.virtualControllerStickRight.stick.style.transform = `translate3d(${vsRx}px, ${vsRy}px, 0px)`;",
                    "    this.virtualControllerStickLeft.stick.style.transform = `translate3d(${vsLx}px, ${vsLy}px, 0px)`;",
                    "",
                    "    if(triggerRight > 0){",
                    "        this.virtualControllerbuttonFire.classList.add(\"pressed\");",
                    "    }else{",
                    "        this.virtualControllerbuttonFire.classList.remove(\"pressed\");",
                    "    }",
                    "}"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "gamepadUpdate",
            "designerId": "543d2255-e1bb-4715-8b99-3c239bf7b2c1"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "showVirtualControllerDeleteMe",
                "implHandler": [
                    "if(!this.virtualController){",
                    "    this.virtualController = Ext.create({",
                    "        xtype:'panel',",
                    "        title:'Virtual Controller',",
                    "        iconCls:'x-fa fa-gamepad',",
                    "        floated:true,",
                    "        userCls:'controller-window',",
                    "        width:500,",
                    "        height:300,",
                    "        //x:150,",
                    "        //y:100,",
                    "        closable:true,",
                    "        centered:true,",
                    "        closeAction:'hide',",
                    "        showAnimation:{type:'fade'},",
                    "        draggable:true,",
                    "        html:'<div class=\"button-container\"><div class=\"left-buttons\">'+",
                    "\t\t'<div class=\"stick\" id=\"virctrlstickLeft\"></div>'+",
                    "\t\t'<button class=\"btn-fire\" id=\"virctrlbuttonFire\"></button>'+",
                    "\t'</div>'+",
                    "\t'<div class=\"right-buttons\">'+",
                    "\t\t'<div class=\"stick\" id=\"virctrlstickRight\"></div>'+",
                    "\t'</div></div>',",
                    "        listeners:{",
                    "            scope:this,",
                    "",
                    "            painted:function(){",
                    "                //console.log(this);",
                    "                if(!this.buttonsInit){",
                    "                    this.buttonsInit = true;",
                    "                    this.virtualControllerbuttonFire = document.getElementById('virctrlbuttonFire');",
                    "                    createFireButton(this.virtualControllerbuttonFire, function(state){",
                    "                        console.log('fire button!', state);",
                    "                        if(state==='down'){",
                    "                            this.fieldShootText.setValue(1);",
                    "                        }else if(state==='up'){",
                    "                            this.fieldShootText.setValue(0);",
                    "                        }",
                    "",
                    "                    }.bind(this));",
                    "                    stickRange = 50;",
                    "                    this.virtualControllerStickRight = createStick(document.getElementById('virctrlstickRight'), stickRange, 'right', function(pos){",
                    "                        //console.log('stick move! right ', pos);",
                    "                        this.fieldGamepadRightX.setValue(pos.x);",
                    "                        this.fieldGamepadRightY.setValue(pos.y);",
                    "",
                    "                        var x = 1000 - Math.round(((pos.x/50) * 500) + 500);",
                    "                        var y = Math.round(((pos.y/50) * 500) + 500);",
                    "                        this.trexPanSlider.setValue(x);",
                    "                        this.trexTiltSlider.setValue(y);",
                    "                    }.bind(this));",
                    "                    this.virtualControllerStickLeft = createStick(document.getElementById('virctrlstickLeft'), stickRange, 'left', function(pos){",
                    "                        //console.log('stick move! left ', pos);",
                    "",
                    "                        this.fieldGamepadLeftX.setValue(pos.x);",
                    "                        this.fieldGamepadLeftY.setValue(pos.y);",
                    "",
                    "                        var x = Math.round(((pos.x/50) * 500) + 500);",
                    "                        var y = 1000 - Math.round(((pos.y/50) * 500) + 500);",
                    "                        this.fieldSteeringSetPointText.setValue(x);",
                    "                        this.fieldThrottleText.setValue(y);",
                    "                    }.bind(this));",
                    "                }",
                    "            }",
                    "        }",
                    "    });",
                    "",
                    "}",
                    "//console.log(this.virtualController);",
                    "this.virtualController.show();",
                    "let drag = this.virtualController.getDraggable();",
                    "drag.on({",
                    "     dragstart:function(drag, event){",
                    "         console.log('drag start');",
                    "         console.log(event);",
                    "         if(event.eventTarget.className===\"joystick\"){",
                    "             console.log('drag start CANCEL!');",
                    "             //event.stopEvent();",
                    "             return false;",
                    "         }",
                    "     },",
                    "    beforedragstart:function(drag, event){",
                    "        if(event.eventTarget.className===\"joystick\"){",
                    "            //event.stopEvent();",
                    "            return false;",
                    "        }",
                    "    }",
                    "});",
                    ""
                ]
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code"
            },
            "name": "showVirtualControllerDeleteMe",
            "designerId": "e54686e6-5ac0-442b-a357-50ecd294a5fe"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "clearDebugOutput",
                "implHandler": [
                    "// console.log(message);",
                    "// console.log(this.queryById('debugOutputContainer'));",
                    "var dom = this.queryById('debugOutputContainer').el.dom;",
                    "// console.log(dom);",
                    "dom.innerHTML = \"\";"
                ]
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code"
            },
            "name": "clearDebugOutput",
            "designerId": "1827a445-ef50-48ca-8468-0417f07aacde"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "message"
                ],
                "fn": "appendDebugOutput",
                "implHandler": [
                    "console.log(message);",
                    "",
                    "// console.log(this.queryById('debugOutputContainer'));",
                    "var dom = this.queryById('debugOutputContainer').el.dom;",
                    "// console.log(dom);",
                    "dom.innerHTML += message + \"<BR>\\r\\n\";",
                    "// console.log(this.queryById('debugOutputContainerOuter'));",
                    "containerDom = this.queryById('debugOutputContainerOuter').bodyElement.dom;",
                    "containerDom.scrollTop = dom.clientHeight;"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "appendDebugOutput",
            "designerId": "d4051c6b-14e4-469d-a4d1-b61f6656ca08"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "config"
                ],
                "fn": "showConfig",
                "implHandler": [
                    "console.log('config from server');",
                    "console.log(config);",
                    "",
                    "this.config = config;",
                    "",
                    "this.queryById('fullConfig').setValue(JSON.stringify(config,null,2));"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "showConfig",
            "designerId": "f623a990-ea73-4dce-926a-c4b203fe2a9c"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "startVideo",
                "implHandler": [
                    "if(!this.YesCheckingVideoRunning){",
                    "    this.YesCheckingVideoRunning = true;",
                    "    this.checkVideoRunning();",
                    "}",
                    "",
                    "this.websocketSend({",
                    "    action:'startVideo'",
                    "}, true);",
                    "",
                    "if(!this.videoStreamPlayer){",
                    "    var canvas = document.getElementById('video-canvas');",
                    "    var url = 'ws://'+location.hostname+':'+location.port+'/viewVideo';",
                    "    this.videoStreamPlayer = new JSMpeg.Player(url, {canvas: canvas});",
                    "}",
                    "if(!this.audioStreamPlayer){",
                    "    var canvas = document.getElementById('audio-canvas');",
                    "    var url = 'ws://'+location.hostname+':'+location.port+'/viewAudio';",
                    "    this.audioStreamPlayer = new JSMpeg.Player(url, {canvas: canvas});",
                    "}"
                ]
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code"
            },
            "name": "startVideo",
            "designerId": "7500fce0-48b2-4918-9b51-532a1c1b4b40"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "checkVideoRunning",
                "implHandler": [
                    "this.websocketSend({",
                    "    action:'readVideoRunning'",
                    "});",
                    "",
                    "if(this.YesCheckingVideoRunning){",
                    "    Ext.defer(function(){",
                    "        this.checkVideoRunning();",
                    "    }, 3000, this);",
                    "}"
                ]
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code"
            },
            "name": "checkVideoRunning",
            "designerId": "ff42028b-e4ba-48e0-a9d4-cc7056ec13f7"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "response"
                ],
                "fn": "checkVideoRunningResponse",
                "implHandler": [
                    "this.YesCheckingVideoRunning = response.running;",
                    "this.queryById('videoStatus').setHtml('Status: ' + (response.running ? 'Running' : 'Stopped'));"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "checkVideoRunningResponse",
            "designerId": "dcda3a57-ec48-42e9-a804-a16852bdc5a0"
        },
        {
            "type": "basiceventbinding",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "tabpanel"
                ],
                "fn": "onTabpanelControllerIgnoreStart",
                "implHandler": [
                    "console.log('ignoring controller events!');",
                    "this.controllerIgnore = true;"
                ],
                "name": "controllerIgnoreStart"
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code",
                "name": "string"
            },
            "name": "onTabpanelControllerIgnoreStart",
            "designerId": "ad334501-2a7a-4936-a30f-49346e7b3c14"
        },
        {
            "type": "basiceventbinding",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "tabpanel"
                ],
                "fn": "onTabpanelControllerIgnoreStop",
                "implHandler": [
                    "this.controllerIgnore = false;"
                ],
                "name": "controllerIgnoreStop"
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code",
                "name": "string"
            },
            "name": "onTabpanelControllerIgnoreStop",
            "designerId": "05aeb8a7-9358-4ca1-ab9b-15bd56671ba1"
        }
    ]
}